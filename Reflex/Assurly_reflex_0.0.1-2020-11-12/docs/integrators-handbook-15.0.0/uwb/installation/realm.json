{
  "id": "reflex",
  "realm": "reflex",
  "displayName": "ReFlex UWB - Workbench for Underwriting & Claims",
  "enabled": true,
  "sslRequired": "external",
  "rememberMe": true,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "bruteForceProtected": true,
  "failureFactor": 15,
  "roles": {
    "client": {
      "uwb-ui": [],
      "uwb": [
        {
          "name": "API_CASE_IMPORT",
          "description": "The external system is allowed to import cases using the UWB Import API.",
          "composite": false,
          "clientRole": true,
          "containerId": "f709f36b-b1d0-4319-98bd-5b773e556e5d",
          "attributes": {}
        },
        {
          "name": "USER",
          "description": "This permission is required for all UWB users.",
          "composite": false,
          "clientRole": true,
          "containerId": "f709f36b-b1d0-4319-98bd-5b773e556e5d",
          "attributes": {}
        },
        {
          "name": "OPS_PROMETHEUS",
          "description": "The external system is allowed to retrieve monitoring information from the UWB REST API.",
          "composite": false,
          "clientRole": true,
          "containerId": "f709f36b-b1d0-4319-98bd-5b773e556e5d",
          "attributes": {}
        },
        {
          "name": "OPS_LOGGERS",
          "description": "The external system is allowed to change the loggers settings using the spring boot actuator REST API.",
          "composite": false,
          "clientRole": true,
          "containerId": "f709f36b-b1d0-4319-98bd-5b773e556e5d",
          "attributes": {}
        },
        {
          "name": "ADMIN",
          "description": "The user is allowed to perform administrative actions in the `TE`-Office.",
          "composite": false,
          "clientRole": true,
          "containerId": "f709f36b-b1d0-4319-98bd-5b773e556e5d",
          "attributes": {}
        }
      ]
    }
  },
  "users": [
    {
      "username": "service-account-external-monitoring",
      "enabled": true,
      "serviceAccountClientId": "external-monitoring",
      "credentials": [
        {
          "type": "password",
          "value": "password"
        }
      ],
      "realmRoles": [
        "offline_access"
      ],
      "clientRoles": {
        "uwb": [
          "OPS_PROMETHEUS"
        ]
      }
    },
    {
      "username": "service-account-uwb",
      "enabled": true,
      "serviceAccountClientId": "uwb",
      "credentials": [
        {
          "type": "password",
          "value": "password"
        }
      ],
      "realmRoles": [
        "offline_access"
      ]
    },
    {
      "username": "reflex_admin",
      "enabled": true,
      "emailVerified": true,
      "firstName": "REFLEX",
      "lastName": "Admin",
      "email": "admin@test-keycloak.test",
      "credentials": [
        {
          "type": "password",
          "value": "password"
        }
      ],
      "realmRoles": [
        "offline_access",
        "user"
      ],
      "clientRoles": {
        "account": [
          "view-profile",
          "manage-account"
        ],
        "uwb": [
          "USER",
          "ADMIN"
        ],
        "realm-management": [ "realm-admin" ]
      }
    }
  ],
  "groups": [],
  "clients": [
    {
      "clientId": "external-monitoring",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "fullScopeAllowed": true,
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "clientId": "uwb",
      "name": "Underwriting Workbench Resource Server",
      "description": "Protected Resources of the Underwriting Workbench",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "protocol": "openid-connect",
      "attributes": {
        "exclude.session.state.from.auth.response": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true
    },
    {
      "clientId": "uwb-ui",
      "name": "ReFlex UNDERWRITING WORKBENCH",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": true,
      "protocol": "openid-connect",
      "attributes": {
        "exclude.session.state.from.auth.response": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "display.on.consent.screen": "false"
      },
      "fullScopeAllowed": true,
      "protocolMappers" : [ {
        "name" : "organizationalUnitName",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "organizationalUnitName",
          "id.token.claim" : "false",
          "access.token.claim" : "false",
          "claim.name" : "organizationalUnitName",
          "jsonType.label" : "String"
        }
      }, {
        "name" : "location",
        "protocol" : "openid-connect",
        "protocolMapper" : "oidc-usermodel-attribute-mapper",
        "consentRequired" : false,
        "config" : {
          "userinfo.token.claim" : "true",
          "user.attribute" : "location",
          "id.token.claim" : "false",
          "access.token.claim" : "false",
          "claim.name" : "location",
          "jsonType.label" : "String"
        }
      } ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ]
    }
  ],
  "clientScopes": [
    {
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "reflex",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "user.attribute": "reflex",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String"
          }
        },
        {
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "false",
            "userinfo.token.claim": "true"
          }
        },
        {
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        }
      ]
    }
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": false,
  "supportedLocales": [],
  "attributes": {
    "displayName": "ReFlex",
    "_browser_header.xRobotsTag": "none",
    "webAuthnPolicyRpEntityName": "keycloak",
    "failureFactor": "15",
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "_browser_header.xXSSProtection": "1; mode=block",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "keycloakVersion": "8.0.1",
  "userManagedAccessAllowed": false
}