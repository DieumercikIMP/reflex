function ApplicationController($scope,$rootScope,$routeParams,$route,cepTranslate,questionnaireConfig){"use strict";angular.isUndefined($scope.assessmentId)&&($scope.assessmentId=$routeParams.assessmentId),$rootScope.cepLanguage=$routeParams.lang?$routeParams.lang:questionnaireConfig.defaultTranslation,$rootScope.setCepLanguage=function(l){$rootScope.cepLanguage=l},$scope.$on("$routeUpdate",function(){$routeParams.lang&&$scope.setCepLanguage($routeParams.lang)}),$scope.$watch("cepLanguage",function(newLang,oldLang){cepTranslate.use(newLang),oldLang!==newLang&&$route.updateParams({lang:newLang})}),$scope.$on("$routeChangeSuccess",function(){$routeParams.groupId&&($scope.currentPageId=$routeParams.groupId)}),$scope.$watch("currentPageId",function(nextPageId,lastPageId){nextPageId!==lastPageId&&$route.updateParams({groupId:nextPageId})}),$scope.paginationMode=$scope.paginationMode||"Questionnaire"}function AssessmentFactorSearchAddRowButton(){"use strict";return{restrict:"E",templateUrl:"templates/form_fields/components/assessment-factor-search-add-row-button.html",require:"ngModel",scope:{question:"<",questionnaireReadonly:"<"},link:function(scope,element,attrs,ngModel){function selectItem(item){scope.question.answer||(scope.question.answer=[]),scope.question.answer.push(angular.copy(item))}function removeItem(item){scope.question.answer.splice(scope.question.answer.indexOf(item),1)}scope.addAssessmentFactor=function(){var nextAssessmentFactor=scope.question.nextUnusedFactor;nextAssessmentFactor&&selectItem(nextAssessmentFactor)},scope.$watchCollection("question.answer",function(n){if(ngModel.$setViewValue(n),attrs.required){var length=angular.isArray(scope.question.answer)?scope.question.answer.length:0;ngModel.$setValidity("required",length>0)}}),scope.$on("questionnaire:assessmentFactorGroup:deleteRequest",function(evt,qid){for(var i=0;i<scope.question.answer.length;++i){var item=scope.question.answer[i];if(item.id===qid){removeItem(item);break}}})}}}function CepAwesomeNumber(){"use strict";function parseToNumber(value,groupSeparator,decimalSeparator,pattern){var inputValue=value+"",inputGroups=inputValue.split(groupSeparator),intermediateResult=inputGroups.join("");if(intermediateResult=intermediateResult.split(decimalSeparator).join("."),!isNaN(+intermediateResult)){if(inputGroups.length>1){for(var i=1;i<inputGroups.length-1;i++)if(inputGroups[i].length!==pattern.gSize)return;var lastGroup=inputGroups[inputGroups.length-1].split(decimalSeparator)[0];if(lastGroup.length!==pattern.lgSize)return}return+intermediateResult}}return{restrict:"E",require:["cepAwesomeNumber","ngModel"],templateUrl:"templates/form_fields/components/cep-awesome-number.html",scope:{maxPrecision:"<?",minPrecision:"<?",groupSize:"<?",lgGroupSize:"<?",separators:"<?",question:"=",questionForm:"=",formFieldId:"<",onInputDone:"<",isDisabled:"<"},controller:function($scope){this.groupSeparator=$scope.separators?$scope.separators.group:",",this.decimalSeparator=$scope.separators?$scope.separators.decimal:".",this.pattern={gSize:$scope.groupSize||3,lgSize:$scope.lgGroupSize||3,maxFrac:$scope.maxPrecision||3,minFrac:$scope.minPrecision||0,negPre:"-",negSuf:"",posPre:"",posSuf:""}},link:function(scope,element,attr,ctrls){var ctrl=ctrls[0],ngModel=ctrls[1],constraints=scope.question.constraints||{};scope.questionForm[scope.formFieldId]=ngModel,ngModel.$parsers.push(function(value){return parseToNumber(value,ctrl.groupSeparator,ctrl.decimalSeparator,ctrl.pattern)}),constraints.minValue&&(ngModel.$validators.min=function(modelValue){return modelValue>=constraints.minValue}),constraints.maxValue&&(ngModel.$validators.max=function(modelValue){return modelValue<=constraints.maxValue})}}}function CepComponentBlurObserver($window,$timeout,NamespaceService){"use strict";return{restrict:"A",link:function(scope,element,attrs){function registerOutsideListener(){listenerActive||($window.addEventListener("focus",onClickOrFocus,!0),$window.addEventListener("click",onClickOrFocus,!0),listenerActive=!0)}function onClickOrFocus(event){if(event.target instanceof HTMLElement){var targetIsOutside=!element[0].contains(event.target),targetIsTaggedWithSetsTouched=event.target.hasAttribute("blurs-component");(targetIsOutside||targetIsTaggedWithSetsTouched)&&($window.removeEventListener("click",onClickOrFocus,!0),$window.removeEventListener("focus",onClickOrFocus,!0),originalSetTouched(),listenerActive=!1,angular.isDefined(attrs.afterAction)&&NamespaceService.get(scope,attrs.afterAction)(),scope.$$phase||scope.$root&&scope.$root.$$phase||scope.$apply())}}var listenerActive,focusableElements,originalSetTouched=angular.noop,unbindWatcher=scope.$watch("modelController",function(qo){angular.isDefined(qo)&&(originalSetTouched=scope.modelController.$setTouched.bind(scope.modelController),scope.modelController.$setTouched=angular.noop,unbindWatcher())});$timeout(function(){focusableElements=element[0].querySelectorAll(":not([blurs-component])");for(var i=0;i<focusableElements.length;++i)focusableElements[i].addEventListener("focus",registerOutsideListener)})}}}function CepCustomWidget($compile,$timeout){"use strict";return{restrict:"C",template:"<!-- empty -->",link:function(scope,element){function commit(){scope.modelController.$setTouched(!0),scope.onInputDone()}function setValue(value){lastAnswer=value,scope.modelController.$setViewValue(value)}function onExternalChange(func){externalChangeFunction=func}function addValidator(key,validator){scope.modelController.$validators[key]=validator}function updateWidgetProperties(){scope.widgetProperties={question:scope.question,readOnly:scope.questionnaireReadonly,language:scope.language,renderHints:scope.renderHints}}var lastAnswer,externalChangeFunction=angular.noop;scope.widgetApi={commit:commit,setValue:setValue,onExternalChange:onExternalChange,addValidator:addValidator},$timeout(function(){var directiveName,ESC_MAP={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"};directiveName=scope.renderHints.directive.replace(/[&<>]/g,function(c){return ESC_MAP[c]});var curstomDirective=$compile("<"+directiveName+' widget-api="widgetApi" widget-properties="widgetProperties"></'+directiveName+">")(scope);element.append(curstomDirective)}),scope.$watch("question.answer",function(newAnswer){newAnswer!==lastAnswer&&externalChangeFunction(newAnswer)}),scope.$watch("questionnaireReadonly",updateWidgetProperties),scope.$watch("language",updateWidgetProperties)}}}function CepDateOutOfRange(cepTranslateFilter,rasToLocaleDateFilter,NamespaceService){"use strict";return{restrict:"A",link:function(scope,element){function translateWithContext(key){return cepTranslateFilter(key,{min:rasToLocaleDateFilter(scope.question.constraints.minValue),max:rasToLocaleDateFilter(scope.question.constraints.maxValue)},scope.language)}var text;angular.isDefined(scope.modelController.$error.max)?text=NamespaceService.get(scope,"question.constraints.maxValueViolationMessage")||translateWithContext("components.date.errors.outOfUpperBound"):angular.isDefined(scope.modelController.$error.min)&&(text=NamespaceService.get(scope,"question.constraints.minValueViolationMessage")||translateWithContext("components.date.errors.outOfLowerBound")),element.text(text)}}}function CepDatePickerJs(cepTranslate,NamespaceService,DateConversionService){"use strict";return{restrict:"A",require:"ngModel",priority:1,link:function(scope,element,attr,ngModel){function setupScope(){scope.precision=scope.question.precision||"day",scope.status={opened:!1},scope.minDate=DateConversionService.rasToDate(NamespaceService.get(scope,"question.constraints.minValue")),scope.maxDate=DateConversionService.rasToDate(NamespaceService.get(scope,"question.constraints.maxValue")),scope.currentDatePickerMode=scope.precision,scope.initDate=determineInitDate(),scope.getCurrentLocaleFormat=getCurrentLocaleFormat,scope.getCurrentLocaleFormatTranslation=getCurrentLocaleFormatTranslation,scope.uibDatePickerOptions={mode:scope.currentDatePickerMode,minMode:scope.precision,maxMode:"year",minDate:scope.minDate,maxDate:scope.maxDate,initDate:scope.initDate,showWeeks:!1},setupParsers(),ngModel.$formatters.push(function(string){return DateConversionService.rasToDate(string)}),scope.$watch("ngModel.$error.parse",function(isInvalidDate){ngModel.$setValidity("date",!isInvalidDate)}),ngModel.$validators.min=validateMin,ngModel.$validators.max=validateMax}function setupParsers(){delete ngModel.$validators.date,ngModel.$parsers.push(function(date){return null===date?null:DateConversionService.dateToRas(date,scope.precision)})}function getCurrentLocaleFormat(){switch(scope.precision){case"year":return cepTranslate.translate("components.date.formats.year",scope.language);case"month":return cepTranslate.translate("components.date.formats.month",scope.language);default:return cepTranslate.translate("components.date.formats.day",scope.language)}}function getCurrentLocaleFormatTranslation(){switch(scope.precision){case"year":return cepTranslate.translate("components.date.placeholder.year",scope.language);case"month":return cepTranslate.translate("components.date.placeholder.month",scope.language);default:return cepTranslate.translate("components.date.placeholder.day",scope.language)}}function validateMin(modelValue,viewValue){var isEmpty=angular.isUndefined(viewValue)||null===modelValue;if(isEmpty||!scope.minDate)return!0;var value=modelValue||viewValue,jsDate=DateConversionService.rasToDate(value);return!moment(jsDate).isBefore(scope.minDate)}function validateMax(modelValue,viewValue){var isEmpty=angular.isUndefined(viewValue)||null===modelValue;if(isEmpty||!scope.maxDate)return!0;var value=modelValue||viewValue,jsDate=DateConversionService.rasToDate(value);return!moment(jsDate).isAfter(scope.maxDate)}function determineInitDate(){return scope.maxDate&&moment(scope.maxDate).isBefore()?moment(scope.maxDate).toDate():scope.minDate&&moment(scope.minDate).isAfter()?moment(scope.minDate).toDate():new Date}setupScope();var firstRun=!0;scope.$watch("question.answer",function(){var inputViaDatepicker=!scope.status.focused;if(!firstRun&&inputViaDatepicker){var btn=element.parent()[0].getElementsByClassName("calender-btn")[0];btn.focus(),scope.onInputDone()}firstRun=!1})}}}function CepDatePickerNative(dateFilter){"use strict";return{restrict:"A",require:"ngModel",link:{post:function(scope,elm,attrs,ngModelCtrl){function getFormat(){var formats={year:"yyyy",month:"yyyy-MM",day:"yyyy-MM-dd"};return formats[scope.precision]||"yyyy-MM-dd"}scope.precision=scope.question.precision||"day";var format=getFormat();ngModelCtrl.$formatters.push(function(modelValue){return new Date(modelValue)}),ngModelCtrl.$parsers.push(function(viewValue){return dateFilter(viewValue,format)}),scope.$watch("ngModel.$error.parse",function(isInvalidDate){ngModelCtrl.$setValidity("date",!isInvalidDate)})}}}}function CepDateTimePickerComponent(){"use strict";return{restrict:"E",templateUrl:"templates/form_fields/components/date-time-picker-component.html",scope:{modelFormat:"@",isDisabled:"<",min:"<",max:"<",fixedMinutes:"<",fixedMinutesText:"<",dateFormat:"<",datePlaceholder:"<",hourPlaceholder:"<",minutePlaceholder:"<",timeFormat:"<",meridianTranslations:"<"},require:"ngModel",link:function(scope,element,attrs,ngModel){function fixValidations(){var dateMissingButNotInvalid=!scope.answer.date&&!ngModel.$error.date,dateMissingButTimeOkay=ngModel.$error.dateMissing&&!ngModel.$error.time,dateIsInvalid=ngModel.$error.date,somethingIsInvalid=dateIsInvalid||ngModel.$error.time;ngModel.$validate(),ngModel.$setValidity("time",!!scope.answer.time),ngModel.$setValidity("dateMissing",!dateMissingButNotInvalid),ngModel.$error.dateMissing&&ngModel.$error.time&&(ngModel.$setValidity("dateMissing",!0),ngModel.$setValidity("time",!0)),(dateMissingButTimeOkay||somethingIsInvalid)&&ngModel.$error.required&&ngModel.$setValidity("required",!0)}function validateMin(modelValue,viewValue){var isEmpty=angular.isUndefined(viewValue)||null===modelValue;return!!isEmpty||!moment(viewValue).isBefore(scope.datepickerOptions.minDate)}function validateMax(modelValue,viewValue){var isEmpty=angular.isUndefined(viewValue)||null===modelValue;return!!isEmpty||!moment(viewValue).isAfter(scope.datepickerOptions.maxDate)}function combineDateAndTime(date,time){time=moment(time),date=moment(date);var timeDiff=time.diff(time.clone().startOf("day"));return date.clone().startOf("day").add(timeDiff,"milliseconds")}function determineInitDate(){var max=scope.datepickerOptions.maxDate?moment(scope.datepickerOptions.maxDate):void 0,min=scope.datepickerOptions.minDate?moment(scope.datepickerOptions.minDate):void 0;return max&&max.isBefore()?max.toDate():min&&min.isAfter()?min.toDate():new Date}var skipSync=!1;scope.datePopup={open:!1},scope.ngModel=ngModel,scope.answer={},scope.datepickerOptions={mode:"day",minMode:"day",maxMode:"year",showWeeks:!1},angular.isDefined(scope.min)&&(scope.datepickerOptions.minDate=moment(scope.min,scope.modelFormat).toDate(),ngModel.$validators.min=validateMin),angular.isDefined(scope.max)&&(scope.datepickerOptions.maxDate=moment(scope.max,scope.modelFormat).toDate(),ngModel.$validators.max=validateMax),ngModel.$parsers.push(function(viewValue){if(angular.isDefined(viewValue))return viewValue.format(scope.modelFormat)}),ngModel.$formatters.push(function(modelValue){if(angular.isDefined(modelValue))return moment(modelValue,scope.modelFormat)}),scope.datepickerOptions.initDate=determineInitDate(),scope.$watch("nestedForm.date.$error.parse",function(isInvalidDate){ngModel.$setValidity("date",!isInvalidDate)}),scope.$watch("nestedForm.time.$error.parse",function(isInvalidTime){ngModel.$setValidity("time",!isInvalidTime)}),scope.$watch("nestedForm.date.$error.date",function(isInvalidDate){ngModel.$setValidity("date",!isInvalidDate)}),scope.$watch("nestedForm.time.$error.time",function(isInvalidTime){ngModel.$setValidity("time",!isInvalidTime)}),scope.$watch("ngModel.$error",fixValidations,!0),scope.$watch("ngModel.$modelValue",function(newModelValue){if(!skipSync)if(angular.isDefined(newModelValue)){var newValue=moment(newModelValue,scope.modelFormat);scope.answer.date=newValue.toDate(),scope.answer.time=newValue.toDate()}else scope.answer.date=void 0,scope.answer.time=void 0;skipSync=!1}),scope.$watch("answer",function(newValue){newValue.date&&newValue.time?ngModel.$setViewValue(combineDateAndTime(newValue.date,newValue.time)):ngModel.$setViewValue(void 0),fixValidations(),skipSync=!0},!0)}}}function CepDateTimePickerFormField(){"use strict";return{restrict:"A",link:function(scope){scope.modelFormat="hour"===scope.question.precision?"YYYY-MM-DDTHH":"YYYY-MM-DDTHH:mm"}}}function CepDynamicHeadline(){"use strict";return{restrict:"E",template:"<ng-transclude></ng-transclude>",transclude:!0,link:function(scope,element,attr){if(attr.level){var headlineLevel=Math.min(6,parseInt(attr.level));element.find("ng-transclude").wrap("<h"+headlineLevel+"></h"+headlineLevel+">")}}}}function CepFormField(NamespaceService,QuestionTreeService,Modernizr){"use strict";return{restrict:"E",template:'<div ng-include="getTemplate()" data-question-id="{{question.id === \'prototype\' ? question.meta.cep.ui.id : question.id}}" data-question-type="{{question.type}}" class="question-form-field"></div>',link:function(scope){function getTemplate(){var suffix,prefix="templates/form_fields/";if("custom"===scope.renderHints.type)return prefix+"custom-widget.html";switch(scope.question.type){case"text":suffix=determineTextTemplate();break;case"date":suffix=determineDateTemplate();break;case"number":suffix=determineNumberTemplate();break;case"singleselection":suffix=determineSingleSelectionTemplate();break;case"multiselection":suffix=shouldRenderAsDropdown(!0)?"select-multi.html":"checkbox.html";break;case"assessment-factor-search":suffix="search.html";break;default:suffix="not-supported.html"}return prefix+suffix}function determineSingleSelectionTemplate(){return shouldRenderAsDropdown(!1)?"dropdown.html":shouldRenderAsSingleCheckbox()?"single-checkbox.html":"radio.html"}function shouldRenderAsDropdown(isMultiSelection){if("dropdown"===scope.renderHints.type)return!0;if("group"===scope.renderHints.type)return!1;var numberOfOptions=NamespaceService.get(scope.question,"options.length")||0,isInTable=scope.insideTable;return isInTable&&(isMultiSelection||numberOfOptions>2)}function shouldRenderAsSingleCheckbox(){return scope.renderHints&&"single-checkbox"===scope.renderHints.type}function determineTextTemplate(){return"multi-line"===scope.renderHints.type?"text-area.html":"text.html"}function determineDateTemplate(){var showNativeDatePicker=Modernizr.touch&&Modernizr.inputtypes.date&&Modernizr.inputtypes.month,isDateTimeQuestion="minute"===scope.question.precision||"hour"===scope.question.precision;return isDateTimeQuestion?"date-time-picker-form-field.html":showNativeDatePicker?"date-picker-native.html":"date-picker-js.html"}function determineNumberTemplate(){return"money"===scope.renderHints.type?"monetary-amount.html":scope.questionHasUnit?"number-with-multiple-units.html":"number.html"}function getFormFieldId(){return QuestionTreeService.generateFormFieldId(scope.question)}scope.getFormFieldId=getFormFieldId,scope.getTemplate=getTemplate}}}function CepInvalidDate(cepTranslateFilter,NamespaceService,DateConversionService){"use strict";return{restrict:"A",link:function(scope,element){var translationKey="components.date.errors.invalidDate",minDate=NamespaceService.get(scope,"question.constraints.minValue"),maxDate=NamespaceService.get(scope,"question.constraints.maxValue"),date=minDate||maxDate||moment().format("YYYY-MM-DD");element.text(cepTranslateFilter(translationKey,{format:DateConversionService.rasToLocaleDate(date,scope.language,scope.question.precision)},scope.language))}}}function CepLabelFocusFix(){"use strict";return{restrict:"A",link:function(scope,element){var input=element.find("input")[0];element.on("click",function(){input.focus()})}}}function CepNumberFormatter($window){"use strict";function setCaretPosition(domElem,displayValue,clickedPosition,groupSeparator){if(domElem.value!==displayValue){var substring=(displayValue+"").substring(0,clickedPosition),split=substring.split(groupSeparator),len=split.length-1,newCaretPos=clickedPosition-len;domElem.setSelectionRange(newCaretPos,newCaretPos)}}function getCaretPosition(domElem){var selection=domElem.selectionStart;return selection}function formatNumber(number,pattern,groupSep,decimalSep,fractionSize){if(!angular.isString(number)&&!angular.isNumber(number)||isNaN(number))return"";var parsedNumber,isInfinity=!isFinite(number),isZero=!1,numStr=Math.abs(number)+"",formattedText="";if(isInfinity)formattedText="∞";else{parsedNumber=parse(numStr),roundNumber(parsedNumber,fractionSize,pattern.minFrac,pattern.maxFrac);var digits=parsedNumber.d,integerLen=parsedNumber.i,exponent=parsedNumber.e,decimals=[];for(isZero=digits.reduce(function(isZero,d){return isZero&&!d},!0);integerLen<0;)digits.unshift(0),integerLen++;integerLen>0?decimals=digits.splice(integerLen):(decimals=digits,digits=[0]);var groups=[];for(digits.length>=pattern.lgSize&&groups.unshift(digits.splice(-pattern.lgSize).join(""));digits.length>pattern.gSize;)groups.unshift(digits.splice(-pattern.gSize).join(""));digits.length&&groups.unshift(digits.join("")),formattedText=groups.join(groupSep),decimals.length&&(formattedText+=decimalSep+decimals.join("")),exponent&&(formattedText+="e+"+exponent)}return number<0&&!isZero?pattern.negPre+formattedText+pattern.negSuf:pattern.posPre+formattedText+pattern.posSuf}function parse(numStr){var digits,numberOfIntegerDigits,i,j,zeros,ZERO_CHAR="0",DECIMAL_SEP=".",MAX_DIGITS=22,exponent=0;for((numberOfIntegerDigits=numStr.indexOf(DECIMAL_SEP))>-1&&(numStr=numStr.replace(DECIMAL_SEP,"")),(i=numStr.search(/e/i))>0?(numberOfIntegerDigits<0&&(numberOfIntegerDigits=i),numberOfIntegerDigits+=+numStr.slice(i+1),numStr=numStr.substring(0,i)):numberOfIntegerDigits<0&&(numberOfIntegerDigits=numStr.length),i=0;numStr.charAt(i)===ZERO_CHAR;i++);if(i===(zeros=numStr.length))digits=[0],numberOfIntegerDigits=1;else{for(zeros--;numStr.charAt(zeros)===ZERO_CHAR;)zeros--;for(numberOfIntegerDigits-=i,digits=[],j=0;i<=zeros;i++,j++)digits[j]=+numStr.charAt(i)}return numberOfIntegerDigits>MAX_DIGITS&&(digits=digits.splice(0,MAX_DIGITS-1),exponent=numberOfIntegerDigits-1,numberOfIntegerDigits=1),{d:digits,e:exponent,i:numberOfIntegerDigits}}function roundNumber(parsedNumber,fractionSize,minFrac,maxFrac){var digits=parsedNumber.d,fractionLen=digits.length-parsedNumber.i;fractionSize=angular.isUndefined(fractionSize)?Math.min(Math.max(minFrac,fractionLen),maxFrac):+fractionSize;var roundAt=fractionSize+parsedNumber.i,digit=digits[roundAt];if(roundAt>0){digits.splice(Math.max(parsedNumber.i,roundAt));for(var j=roundAt;j<digits.length;j++)digits[j]=0}else{fractionLen=Math.max(0,fractionLen),parsedNumber.i=1,digits.length=Math.max(1,roundAt=fractionSize+1),digits[0]=0;for(var i=1;i<roundAt;i++)digits[i]=0}if(digit>=5)if(roundAt-1<0){for(var k=0;k>roundAt;k--)digits.unshift(0),parsedNumber.i++;digits.unshift(1),parsedNumber.i++}else digits[roundAt-1]++;for(;fractionLen<Math.max(0,fractionSize);fractionLen++)digits.push(0);var carry=digits.reduceRight(function(carry,d,i,digits){return d+=carry,digits[i]=d%10,Math.floor(d/10)},0);carry&&(digits.unshift(carry),parsedNumber.i++)}return{restrict:"A",require:["^^ngModel","^^cepAwesomeNumber"],link:function(scope,element,attrs,ctrls){function updateView(hasFocus){if(!angular.isUndefined(ngModel.$modelValue)){var separator="";hasFocus||(separator=cepAwesomeNumberCtrl.groupSeparator),rawElem.value=formatNumber(ngModel.$modelValue,cepAwesomeNumberCtrl.pattern,separator,cepAwesomeNumberCtrl.decimalSeparator)}}var ngModel=ctrls[0],cepAwesomeNumberCtrl=ctrls[1],rawElem=element[0],isFocused=!1;element.bind("change",function(){scope.$apply(function(){ngModel.$setTouched(),ngModel.$setViewValue(rawElem.value)})}),scope.enterField=function(){if(!isFocused){isFocused=!0;var oldCaret=getCaretPosition(rawElem),currentValue=rawElem.value;updateView(!0),setCaretPosition(rawElem,currentValue,oldCaret,cepAwesomeNumberCtrl.groupSeparator)}},scope.leaveField=function(){isFocused=!1,updateView(!1),scope.onInputDone(),ngModel.$setTouched()},updateView(rawElem===$window.document.activeElement),scope.$watch("groupSize",function(newVal){newVal&&(cepAwesomeNumberCtrl.pattern.gSize=newVal,updateView(!1))}),scope.$watch("lgGroupSize",function(newVal){newVal&&(cepAwesomeNumberCtrl.pattern.lgSize=newVal,updateView(!1))}),scope.$watch("maxPrecision",function(newVal){newVal&&(cepAwesomeNumberCtrl.pattern.maxFrac=newVal,updateView(!1))}),scope.$watch("minPrecision",function(newVal){newVal&&(cepAwesomeNumberCtrl.pattern.minFrac=newVal,updateView(!1))}),scope.$watch("separators",function(newVal){newVal&&(cepAwesomeNumberCtrl.decimalSeparator=newVal.decimal,cepAwesomeNumberCtrl.groupSeparator=newVal.group,updateView(!1))})}}}function CepNumberOutOfRangeValidationMessage(cepTranslateFilter,SplitNumberCalculator){"use strict";return{restrict:"A",scope:{error:"<",min:"<",max:"<",minValueViolationMessage:"<",maxValueViolationMessage:"<",specialType:"<",language:"<"},link:function(scope,element){function setup(){if(scope.error.min&&scope.minValueViolationMessage)element.text(scope.minValueViolationMessage);else if(scope.error.max&&scope.maxValueViolationMessage)element.text(scope.maxValueViolationMessage);else{var translationKey="components.number.errors.";translationKey+=scope.error.max?"outOfUpperBound":"outOfLowerBound";var unitTranslationKey,val=scope.error.max?scope.max:scope.min;if("ft/ins"===scope.specialType){var ftIns=SplitNumberCalculator.parse(val,12);unitTranslationKey=0===ftIns[0]?"components.number.feetInches.formats.inches":0===ftIns[1]?"components.number.feetInches.formats.feet":"components.number.feetInches.formats.feetInches",val=cepTranslateFilter(unitTranslationKey,{feet:ftIns[0],inches:ftIns[1]})}else if("st/lbs"===scope.specialType){var stLbs=SplitNumberCalculator.parse(val,14);unitTranslationKey=0===stLbs[0]?"components.number.stonesPounds.formats.pounds":0===stLbs[1]?"components.number.stonesPounds.formats.stones":"components.number.stonesPounds.formats.stonesPounds",val=cepTranslateFilter(unitTranslationKey,{stones:stLbs[0],pounds:stLbs[1]})}element.text(cepTranslateFilter(translationKey,{val:val}))}}setup(),scope.$watch("error",setup,!0),scope.$watch("language",setup,!0)}}}function CepNumberPrecisionValidator(){"use strict";return{restrict:"A",require:"ngModel",link:function($scope,element,attrs,ngModel){var precisionRegex,precision=attrs.cepNumberPrecisionValidator,hasPrecision=angular.isDefined(precision)&&""!==precision;hasPrecision&&(precisionRegex=new RegExp("^-?[0-9]+([\\.,]?|[\\.,][0-9]{0,"+precision+"})0*$"),ngModel.$validators.numberPrecision=function(modelValue,viewValue){var value=modelValue||viewValue,isEmpty=angular.isUndefined(value)||null===value||""===value||isNaN(value);return isEmpty||precisionRegex.test(value)})}}}function CepNumberWithMultipleUnits($timeout,NamespaceService,cepTranslate){"use strict";return{restrict:"A",link:function(scope){function setupScope(){scope.chooseUnit=chooseUnit,scope.initialUnit=getInitialUnit(),scope.question.unit=scope.initialUnit.id,scope.activeTab=getIndexOfUnitIdInAvailableUnits(scope.initialUnit.id),scope.getHeadlineForUnit=getHeadlineForUnit}function getInitialUnit(){if(angular.isDefined(scope.question.unit)){var index=getIndexOfUnitIdInAvailableUnits(scope.question.unit);return scope.question.availableUnits[index]}return scope.question.defaultUnit}function getIndexOfUnitIdInAvailableUnits(unitId){var availableUnitIds=scope.question.availableUnits.map(function(unitObject){return unitObject.id});return availableUnitIds.indexOf(unitId)}function chooseUnit(unit){unit.id!==scope.question.unit&&(scope.question.unit=unit.id,scope.modelController.$setViewValue(answersPerUnit[unit.id]))}function getHeadlineForUnit(unit){var type=scope.unitRenderHints&&scope.unitRenderHints[unit.id]&&scope.unitRenderHints[unit.id].type||unit.label,key="components.number.multipleUnits.headlines."+type,translation=cepTranslate.translate(key,scope.language);return translation===key?unit.label:translation}var answersPerUnit={};setupScope(),scope.$watch("question.answer",function(newAnswerPerUnit){answersPerUnit[scope.question.unit]=newAnswerPerUnit}),scope.$watch("question.unit",function(newVal){angular.isDefined(newVal)&&(scope.activeTab=getIndexOfUnitIdInAvailableUnits(newVal))});var unbindWatcher=scope.$watch("modelController",function(newVal){newVal&&(NamespaceService.get(scope.question,"constraints.minValue")&&(scope.modelController.$validators.min=function(modelValue,viewValue){var emptyInput=isNaN(viewValue)||""===viewValue;return emptyInput||viewValue>=scope.question.constraints.minValue}),NamespaceService.get(scope.question,"constraints.maxValue")&&(scope.modelController.$validators.max=function(modelValue,viewValue){var emptyInput=isNaN(viewValue)||""===viewValue;return emptyInput||viewValue<=scope.question.constraints.maxValue}),unbindWatcher())})}}}function cepOptionalString(){"use strict";return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){ngModel&&scope.$eval(attrs.cepOptionalString)===!0&&ngModel.$parsers.push(function(value){return""===value?null:value})}}}function CepPlainQuestion(){"use strict";return{restrict:"A",link:function(scope){function isAnswerGiven(){var type=scope.question.type;if("struct"===type)return scope.question.elements&&scope.question.elements.filter(function(e){return!!e.answer}).length>0;var answerIsEmptyArray=angular.isArray(scope.question.answer)&&0===scope.question.answer.length;return!!scope.question.answer&&!answerIsEmptyArray}function getUnitLabel(){for(var i=0;i<scope.question.availableUnits.length;i++){var unit=scope.question.availableUnits[i];if(unit.id===scope.question.unit)return unit.label}}function getSingleSelectionAnswerLabel(){for(var i=0;i<scope.question.options.length;i++){var option=scope.question.options[i];if(scope.question.answer.id===option.id)return option.label||option.id}}scope.answerIsGiven=isAnswerGiven(),scope.getUnitLabel=getUnitLabel,scope.getSingleSelectionAnswerLabel=getSingleSelectionAnswerLabel}}}function CepQuestionAssessmentFactorGroup($timeout,NamespaceService,QuestionTreeService,FocusService){"use strict";return{restrict:"A",require:"^form",link:function(scope,element,attrs,formCtrl){function emitDeletionRequest(){scope.$emit("questionnaire:cepQuestionContainer:bounce",{name:"questionnaire:assessmentFactorGroup:deleteRequest",args:scope.question.id})}function getInitialExpandedState(){var userSetting=NamespaceService.get(scope.question,"meta.cep.ui.expandedState");return angular.isDefined(userSetting)?userSetting:scope.question.isNew}function getGroupState(){return hasTouchedInvalidChildren()||formCtrl.$invalid&&NamespaceService.get(scope.question,"meta.cep.ui.hasBeenSubmitted")||hasServerValidationRuleMessages("error")?"error":hasServerValidationRuleMessages("warning")?"warning":"valid"}function hasTouchedInvalidChildren(){var result=!1;return angular.forEach(formCtrl,function(questionFormObj,key){0===key.indexOf("q_")&&questionFormObj.$touched&&questionFormObj.$invalid&&(result=!0)}),result}function hasServerValidationRuleMessages(type){var questionHasServerValidationRuleMessage=function(question){for(var i=0;angular.isArray(question.messages)&&i<question.messages.length;++i)if(question.messages[i].type===type)return!0;return!1};return QuestionTreeService.findQuestionInTreeThatMatches(scope.question,[questionHasServerValidationRuleMessage])}function toggleState(){scope.question.meta.cep.ui.expandedState=!scope.question.meta.cep.ui.expandedState,scope.question.meta.cep.ui.expandedState?scope.question.questions.length&&$timeout(function(){FocusService.activateQuestionById(scope.question.questions[0].id,!1)}):scope.$evalAsync(function(){angular.forEach(formCtrl,function(questionFormObj,key){0===key.indexOf("q_")&&questionFormObj.$touched===!1&&questionFormObj.$setTouched()})})}function isChildOfMultiSearch(){if(angular.isUndefined(scope.parent))return!1;var parentIsSearch=scope.parent&&"assessment-factor-search"===scope.parent.type,parentIsSingleSearch="single-answer"===scope.renderHints[scope.parent.id];return parentIsSearch&&!parentIsSingleSearch}function activateParentQuestion(){scope.application.meta.cep.ui.activeQuestionId=scope.parent.id,$timeout(function(){FocusService.activateQuestionById(scope.parent.id,!0)})}function activateNextQuestion(){var nextQuestion=QuestionTreeService.findNextQuestionSameLevelOrHigher(scope.application.questionnaire,scope.question);if(nextQuestion){var nextQuestionExpandedState=NamespaceService.get(nextQuestion,"meta.cep.ui.expandedState");nextQuestionExpandedState===!1&&(nextQuestion.meta.cep.ui.expandedState=!0),scope.application.meta.cep.ui.activeQuestionId=nextQuestion.id,$timeout(function(){FocusService.activateQuestionById(nextQuestion.id,!0)})}}NamespaceService.extend(scope.question,"meta.cep.ui"),scope.nestedForm=formCtrl,scope.question.meta.cep.ui.expandedState=getInitialExpandedState(),scope.toggleState=toggleState,scope.getGroupState=getGroupState,scope.isChildOfMultiSearch=isChildOfMultiSearch(),scope.activateParentQuestion=activateParentQuestion,scope.activateNextQuestion=activateNextQuestion,scope.emitDeletionRequest=emitDeletionRequest,scope.$on("questionnaire:onbeforesubmit",function(){var shouldExpand=formCtrl.$invalid||hasServerValidationRuleMessages("error");shouldExpand&&(scope.question.meta.cep.ui.expandedState=!0)})}}}function CepQuestionCheckbox(NamespaceService){"use strict";return{restrict:"EA",link:function(scope){scope.question.answer||(scope.question.answer=[]),scope.disabledByExclusiveConstraint=function(option){var exclusiveOptionId=NamespaceService.get(scope.question,"constraints.exclusiveOption");if(angular.isUndefined(exclusiveOptionId))return!1;var answers=scope.question.answer||[];
if(0===answers.length)return!1;var exclusiveSelected=answers.filter(function(answer){return answer.id===exclusiveOptionId}).length>0;return exclusiveOptionId!==option.id?exclusiveSelected:!exclusiveSelected&&(answers.length>0||void 0)},scope.required=function(){return(!scope.question.answer||0===scope.question.answer.length)&&(scope.question.constraints&&scope.question.constraints.required)}}}}function CepQuestionContainer(questionnaireConfig,$timeout,NamespaceService,ReflexiveOnEvaluationService,PaginationService,QuestionTreeService,RenderHintService){"use strict";return{restrict:"EA",template:"<ng-include src=\"'templates/question-container.html'\"></ng-include>",scope:{application:"=",assessmentId:"<",currentPageId:"=?",insideTable:"<",language:"@",paginationMode:"=",parent:"<?",question:"=",questionForm:"<",questionnaireReadonly:"<",scheduleAutosubmit:"<",processAutosubmit:"<",forceAutoSubmit:"<",showDeleteAssessmentFactorGroupButton:"<?",hideQuestionTitleLabel:"<?"},link:function(scope){function setupScope(){scope.questionFormFieldId=QuestionTreeService.generateFormFieldId(scope.question),scope.hideLabel=scope.insideTable,scope.isParentForm="struct"===scope.question.type||"list"===scope.question.type,scope.showGroupDuringPagination=showGroupDuringPagination,scope.questionIsGroup=questionIsGroup,scope.questionIsInvalid=questionIsInvalid,scope.initialAnswerByProductChangeMarked=initialAnswerByProductChangeMarked,scope.renderHints=RenderHintService.createRenderHintObject(scope.question),scope.questionIsUnanswered=questionIsUnanswered,scope.hasServerMessage=hasServerMessage,scope.hideTitleDuringPagination=hideTitleDuringPagination,angular.isDefined(scope.question.availableUnits)&&(scope.questionHasUnit=!0),scope.$on("questionnaire:cepQuestionContainer:bounce",function(event,args){var isolatedParentScopeOfEmitter=getFirstIsolatedParentScope(event.targetScope.$parent);isolatedParentScopeOfEmitter&&isolatedParentScopeOfEmitter!==scope&&(angular.isFunction(event.stopPropagation)&&event.stopPropagation(),event.currentScope.$broadcast(args.name,args.args))})}function getFirstIsolatedParentScope(scope){return scope?scope.hasOwnProperty("$root")&&scope.$root!==scope&&scope.$root?scope:getFirstIsolatedParentScope(scope.$parent):null}function initialAnswerByProductChangeMarked(){return NamespaceService.get(questionnaireConfig,"initialAnswerByProductChangeMarked")&&NamespaceService.get(questionnaireConfig,"initialAnswerByProductChangeMarked")===!0&&scope.question.initialAnswerByProductChange===!0}function setupWatchers(){var unbindWatcher=scope.$watch("questionForm[questionFormFieldId]",function(newValue){angular.isDefined(newValue)&&(scope.modelController=newValue,unbindWatcher())})}function questionIsInvalid(){if(!scope.modelController)return!1;var isTouched=scope.modelController.$touched,shouldShowErrorMessage=isTouched||NamespaceService.get(scope.question,"meta.cep.ui.hasBeenSubmitted");return scope.modelController.$invalid&&shouldShowErrorMessage}function showGroupDuringPagination(){var question=scope.question,isGroup=questionIsGroup(question);if(isGroup&&"QuestionGroup"===scope.paginationMode){var isTopLevel=1===NamespaceService.get(question,"meta.cep.ui.level");if(isTopLevel){var allPageIds=PaginationService.getTopLevelGroupIds(scope.application);return PaginationService.isGroupActive(allPageIds,scope.currentPageId,question.id)}return!0}return!0}function hideTitleDuringPagination(){var question=scope.question,isPaginationOn="QuestionGroup"===scope.paginationMode,isTopLevel=1===NamespaceService.get(question,"meta.cep.ui.level"),hasHideTitleTag=scope.renderHints&&scope.renderHints.hideTitle===!0;return isPaginationOn&&isTopLevel&&hasHideTitleTag}function questionIsGroup(question){return"group"===question.type||"assessment-factor-group"===question.type}function questionIsUnanswered(){var requiredIsOnlyError=scope.modelController&&scope.modelController.$error&&1===Object.keys(scope.modelController.$error).length&&scope.modelController.$error.required,modelHasNoValue=scope.modelController&&!scope.modelController.$error&&angular.isUndefined(scope.question.answer)||angular.isArray(scope.question.answer)&&0===scope.question.answer.length;return requiredIsOnlyError||modelHasNoValue}function hasServerMessage(type){for(var i=0;angular.isArray(scope.question.messages)&&i<scope.question.messages.length;++i)if(scope.question.messages[i].type===type)return!0;return!1}var previousAnswer=angular.copy(scope.question.answer);setupScope(),setupWatchers(),scope.onInputStart=function(defer){defer===!0?$timeout(scope.processAutosubmit):scope.processAutosubmit()},scope.onInputDone=function(){var answerHasChanged=!angular.equals(previousAnswer,scope.question.answer);if(answerHasChanged){var hasServerValidationMessage=QuestionTreeService.findQuestionInTreeThatMatches(scope.question,[QuestionTreeService.commonMatchers.questionHasServerValidationRuleMessage]),isReflexiveOnOption=angular.isArray(scope.question.reflexiveOn)&&ReflexiveOnEvaluationService.determineSelectionAutoSubmit(scope.question.reflexiveOn,previousAnswer,scope.question.answer),isReflexive=scope.question.hasReflexive&&angular.isUndefined(scope.question.reflexiveOn),autoSubmitAlways="always"===questionnaireConfig.autoSubmit;if("singleselection"===scope.question.type&&angular.isDefined(scope.question.answer))for(var i=0;i<scope.question.options.length;i++){var option=scope.question.options[i];angular.isDefined(option)&&angular.isDefined(option.label)&&scope.question.answer.id===option.id&&(scope.question.answer.label=option.label)}scope.questionnaireReadonly||(scope.forceAutoSubmit||autoSubmitAlways||hasServerValidationMessage||isReflexive||isReflexiveOnOption)&&scope.scheduleAutosubmit(),previousAnswer=angular.copy(scope.question.answer)}}}}}function CepQuestionKeyboardSupport($timeout,questionnaireConfig){"use strict";return{restrict:"A",link:function(scope,element){function onKeyPress(event){var key=angular.isNumber(event.which)?event.which:event.keyCode;key>48&&key<=57?selectIndex(key-48-1):key>96&&key<=105&&selectIndex(key-96-1)}function selectIndex(index){var input=element.find("input")[index];input&&$timeout(function(){input.click(),input.focus()})}scope.showCheckboxKey=questionnaireConfig.showCheckboxKey,scope.onKeyPress=onKeyPress}}}function CepQuestionLabelAnnotation(questionnaireConfig){"use strict";return{restrict:"E",scope:{questionType:"<",questionConstraints:"<",language:"<"},templateUrl:"templates/question-label-annotation.html",link:function(scope){var config=questionnaireConfig.questionAnnotation;scope.$watchGroup(["questionConstraints.required","questionType"],function(newValues){scope.constraint=newValues[0]?"required":"optional";var questionIsNoQuestion=["group","assessment-factor-group","label"].indexOf(newValues[1])!==-1;scope.annotation=!questionIsNoQuestion&&config[scope.constraint]})}}}function CepQuestionList(uuid4,NamespaceService,QuestionTreeService,FocusService,$timeout,questionnaireConfig){"use strict";return{restrict:"A",require:"^form",link:function(scope,element,attrs,formCtrl){function addRowIfRequired(){beginningOfRoundTrip||0===scope.question.answer.length&&NamespaceService.get(scope.question,"constraints.required")===!0&&addRow()}function modelChange(){scope.question.answer||(scope.question.answer=[]),addRowIfRequired()}function removeEmptyFirstRow(scope){var form=scope[scope.questionFormFieldId],questionHasOneAnswer=1===scope.question.answer.length,formIsInvalidRequired=form.$error&&form.$error.required&&angular.isArray(form.$error.required)&&form.$error.required.length>=1,questionHasNotBeenSubmitted=NamespaceService.get(scope.question,"meta.cep.ui.hasBeenSubmitted")===!0,listItemsAnswersAreEmpty=containsOnlyEmptyAnswers(form),questionTouchedAndInvalid=containsTouchedAndInvalidQuestions(form);questionHasOneAnswer&&formIsInvalidRequired&&!questionTouchedAndInvalid&&listItemsAnswersAreEmpty&&!questionHasNotBeenSubmitted&&(beginningOfRoundTrip=!0,removedAnswers=angular.copy(scope.question.answer),scope.question.answer.length=0)}function containsTouchedAndInvalidQuestions(form){if(angular.isUndefined(form.$error.required))return!1;var invalidQuestion=form.$error.required[0];if(angular.isArray(invalidQuestion.$error.required)){var answeredQuestions=invalidQuestion.$error.required.filter(function(invalidStructQuestion){return invalidStructQuestion.$touched});return answeredQuestions.length>0}return invalidQuestion.$touched}function setupScope(){scope.showParentValidations=questionnaireConfig.showParentValidations,scope.nestedForm=formCtrl,scope.question.answer||(scope.question.answer=[]),scope.$watchCollection("question.answer",modelChange),scope.questionIsInvalid=questionIsInvalid,scope.addRow=addRow,scope.removeRow=removeRow,scope.generateRowFormId=generateRowFormId,angular.isArray(scope.question.answer)&&scope.question.answer.forEach(setCepIdIfMissing),scope.$on("questionnaire:roundtrip:start",function(){removeEmptyFirstRow(scope)}),scope.$on("questionnaire:roundtrip:done",function(){beginningOfRoundTrip=!1,0===scope.question.answer.length&&(scope.question.answer=removedAnswers)}),scope.$on("questionnaire:invalidQuestion",function(){beginningOfRoundTrip=!1,0===scope.question.answer.length&&(scope.question.answer=removedAnswers)})}function containsOnlyEmptyAnswers(form){if(angular.isUndefined(form.$error.required))return!1;var invalidQuestion=form.$error.required[0];if(angular.isArray(invalidQuestion.$error.required)){var answeredQuestions=invalidQuestion.$error.required.filter(function(invalidStructQuestion){return!invalidStructQuestion.$isEmpty(invalidStructQuestion.$viewValue)});return 0===answeredQuestions.length}return invalidQuestion.$isEmpty(invalidQuestion.$viewValue)}function setCepIdIfMissing(row){NamespaceService.extend(row,"meta.cep.ui"),row.meta.cep.ui.id||(row.meta.cep.ui.id=uuid4.generate()),angular.isArray(row.elements)&&row.elements.forEach(setCepIdIfMissing)}function generateRowFormId(question){return QuestionTreeService.generateFormFieldId(question)}function addRow(){var clonedRow=createQuestion();scope.question.answer.push(clonedRow)}function createQuestion(){var clonedRow=angular.copy(scope.question.prototype);return angular.isUndefined(clonedRow.infoText)&&(clonedRow.infoText=scope.question.infoText),setCepIdIfMissing(clonedRow),clonedRow.elements&&clonedRow.elements.forEach(function(q){NamespaceService.extend(q,"meta.cep.ui"),q.meta.cep.ui.id=uuid4.generate()}),clonedRow}function removeRow(index){var question=scope.question;NamespaceService.get(question,"constraints.required")&&1===question.answer.length?scope.question.answer[0]=createQuestion():angular.isDefined(index)&&angular.isNumber(index)?question.answer.splice(index,1):question.answer.splice(question.answer.length-1,1),scope.onInputDone()}function questionIsInvalid(){var isSubmitted=NamespaceService.get(scope.question,"meta.cep.ui.hasBeenSubmitted"),isTouched=hasTouchedInvalidChildren(),shouldShowErrorMessage=isTouched||isSubmitted;return scope.nestedForm.$invalid&&shouldShowErrorMessage}function hasTouchedInvalidChildren(){for(var hasAnswerArray=angular.isArray(scope.question.answer),i=0;hasAnswerArray&&i<scope.question.answer.length;i++){var element=scope.question.answer[i],questionId=QuestionTreeService.generateFormFieldId(element),questionFormObj=formCtrl[questionId];if(questionFormObj&&questionFormObj.$touched&&questionFormObj.$invalid)return!0}return!1}var beginningOfRoundTrip=!1,removedAnswers=[];scope.question.answer&&(removedAnswers=angular.copy(scope.question.answer)),setupScope()}}}function CepQuestionnaireBlocker(){"use strict";return{restrict:"A",link:function(scope,jqLiteElement){function blockQuestionnaire(){hasKeyboardListener||(element.addEventListener("mousedown",preventEvent,!0),element.addEventListener("click",preventEvent,!0),element.addEventListener("mouseup",preventEvent,!0),element.addEventListener("keydown",preventEvent,!0),element.addEventListener("touchstart",preventEvent,!0),element.addEventListener("touchenter",preventEvent,!0),element.addEventListener("touchmove",preventEvent,!0),element.addEventListener("touchend",preventEvent,!0),element.addEventListener("touchleave",preventEvent,!0),element.addEventListener("touchcancel",preventEvent,!0),hasKeyboardListener=!0)}function unblockQuestionnaire(){hasKeyboardListener&&(element.removeEventListener("mousedown",preventEvent,!0),element.removeEventListener("click",preventEvent,!0),element.removeEventListener("mouseup",preventEvent,!0),element.removeEventListener("keydown",preventEvent,!0),element.removeEventListener("touchstart",preventEvent,!0),element.removeEventListener("touchenter",preventEvent,!0),element.removeEventListener("touchmove",preventEvent,!0),element.removeEventListener("touchend",preventEvent,!0),element.removeEventListener("touchleave",preventEvent,!0),element.removeEventListener("touchcancel",preventEvent,!0),hasKeyboardListener=!1)}function showSpinner(){scope.showSpinner=!0}function hideSpinner(){scope.showSpinner=!1}var element=jqLiteElement[0],hasKeyboardListener=!1;scope.showSpinner=!1,scope.takesTooLong=!1;var preventEvent=function(event){return event.stopPropagation(),event.preventDefault(),!1};scope.$on("questionnaire:roundtrip:start",function(){blockQuestionnaire(),showSpinner()}),scope.$on("questionnaire:roundtrip:done",function(){unblockQuestionnaire(),hideSpinner()}),scope.$on("questionnaire:roundtrip:takesTooLong",function(){scope.takesTooLong=!0}),scope.$on("questionnaire:roundtrip:takesTooLongDone",function(){scope.takesTooLong=!1}),scope.$on("$destroy",function(){unblockQuestionnaire(),hideSpinner()})}}}function CepQuestionnaireCore(){"use strict";return{restrict:"E",templateUrl:"templates/questionnaire-core.html",scope:{application:"=",assessmentId:"<",currentPageId:"=?",form:"<",language:"@",paginationMode:"=",questionnaireReadonly:"<?",submit:"<?",scheduleAutosubmit:"<",processAutosubmit:"<",forceAutoSubmit:"<"},link:function(scope){scope.submit=scope.submit||angular.noop}}}function CepQuestionStruct(QuestionTreeService,questionnaireConfig,NamespaceService){"use strict";return{restrict:"A",require:"form",link:function(scope,element,attrs,formCtrl){function hasTouchedInvalidChildren(){for(var hasElementsArray=angular.isArray(scope.question.elements),i=0;hasElementsArray&&i<scope.question.elements.length;i++){var element=scope.question.elements[i],questionId=QuestionTreeService.generateFormFieldId(element),questionFormObj=formCtrl[questionId];if(questionFormObj&&questionFormObj.$touched&&questionFormObj.$invalid)return!0}return!1}function questionIsInvalid(){var shouldShowErrorMessage=hasTouchedInvalidChildren()||NamespaceService.get(scope.question,"meta.cep.ui.hasBeenSubmitted");return scope.nestedForm.$invalid&&shouldShowErrorMessage}scope.nestedForm=formCtrl,scope.showParentValidations=questionnaireConfig.showParentValidations,scope.$watch(hasTouchedInvalidChildren,function(n){formCtrl.$touched=n}),scope.questionIsInvalid=questionIsInvalid}}}function CepQuestionTemplate(NamespaceService,questionnaireConfig,$window){"use strict";return{restrict:"E",template:'<div ng-include="getTemplate(question)" class="question-template"></div>',link:function(scope,element){function getTemplate(question){var showEvenIfNotAssignedTo=NamespaceService.get(scope.question,"tags.ShowEvenIfNotAssignedTo");if($window.removeEventListener("resize",onResize),"group"===question.type)return"templates/question_templates/question-group.html";if("label"===question.type)return"templates/question_templates/question-label.html";if("virtual"===question.type)return"templates/question_templates/question-virtual.html";if(showEvenIfNotAssignedTo)return"assessment-factor-group"===question.type?"templates/question_templates/question-af-group.html":"templates/question_templates/question-plain.html";switch(question.type){case"struct":return"templates/question_templates/question-struct.html";case"list":return"table"===scope.renderHints.type&&"struct"===NamespaceService.get(question,"prototype.type")&&$window.addEventListener("resize",onResize),"templates/question_templates/"+determineListType(question);case"assessment-factor-group":return"templates/question_templates/"+determineAssessmentFactorGroupRenderType(question);default:return"templates/question_templates/question-default.html"}}function onResize(){scope.$digest()}function determineListType(question){var subType=NamespaceService.get(question,"prototype.type"),numberOfColumns=NamespaceService.get(question,"prototype.elements.length"),minPixelPerColumn=240,containerElement=element[0].children[0],widthOfContainer=containerElement?element[0].children[0].offsetWidth:0;return"table"===scope.renderHints.type&&"struct"===subType&&widthOfContainer>=numberOfColumns*minPixelPerColumn?"question-table.html":"question-list.html"}function determineAssessmentFactorGroupRenderType(){var isCollapsible=!1,shouldCollapseForMultiSearchQuestions=NamespaceService.get(questionnaireConfig,"assessmentFactorGroups.collapsiblesForSearchChildren");if(shouldCollapseForMultiSearchQuestions&&null!==scope.parent&&angular.isDefined(scope.parent)){var parentIsSearch=scope.parent&&"assessment-factor-search"===scope.parent.type,parentIsSingleSearch="single-answer"===scope.renderHints[scope.parent.id];isCollapsible=parentIsSearch&&!parentIsSingleSearch}return isCollapsible?"question-af-accordeon.html":"question-af-group.html"}scope.getTemplate=getTemplate,scope.$on("$destroy",function(){$window.removeEventListener("resize",onResize)})}}}function CepRemoveOptionalAnswerBtn(NamespaceService){"use strict";return{restrict:"E",templateUrl:"templates/remove-optional-answer-btn.html",link:function(scope){function removeAnswer(event){event.preventDefault(),scope.question.answer=void 0,scope.onInputDone&&(scope.onInputDone(),scope.processAutosubmit())}function shouldShow(){return!(scope.questionnaireReadonly||NamespaceService.get(scope.question,"tags.ShowEvenIfNotAssignedTo"))&&!NamespaceService.get(scope.question,"constraints.required")&&angular.isDefined(scope.question.answer)}scope.removeAnswer=removeAnswer,scope.shouldShow=shouldShow}}}function CepSearchDirective($rootScope,SearchService,questionnaireConfig,NamespaceService,$q,cepTranslate){"use strict";return{restrict:"A",link:{post:function(scope){function determineThreshold(){var minLettersFromConstraints=NamespaceService.get(scope.question,"constraints.minLettersForSearch"),minLettersFromConfig=NamespaceService.get(questionnaireConfig,"minLettersForSearch");return minLettersFromConstraints||minLettersFromConfig||1}function updateTranslation(event,payload){var lang=payload&&payload.locale||scope.language;scope.translations={maximumReached:cepTranslate.translate("components.assessment-factor-search.hints.maximumSelected",lang),nothingFound:cepTranslate.translate("components.assessment-factor-search.hints.noResults",lang),tooLessChars:cepTranslate.translate("components.assessment-factor-search.hints.inputTooShort",{minLetters:threshold},lang),alreadySelected:cepTranslate.translate("components.assessment-factor-search.hints.isAlreadyInList",lang),errorFetchingResults:cepTranslate.translate("components.assessment-factor-search.errors.notLoaded",lang),resultSingular:cepTranslate.translate("components.assessment-factor-search.resultSingular",lang),resultPlural:cepTranslate.translate("components.assessment-factor-search.resultPlural",lang)}}var threshold=determineThreshold();scope.config={minChars:threshold,delay:300,maxItems:"single-answer"===scope.renderHints.type?1:void 0,showClearBtn:!1,clearOnAdd:!0,selectOnClick:!1},scope.translations={},updateTranslation(),scope.itemToKey=function(item){return item.id},scope.itemToString=function(item){return item.label},scope.load=function(searchTerm){return $q(function(resolve,reject){SearchService.load(scope.application,scope.question,scope.assessmentId,searchTerm,function(data){resolve(data.results)},function(error){reject(error)})})},scope.$watchCollection("question.answer",function(newValue,oldValue){var oldLength=oldValue?oldValue.length:0,newlength=newValue?newValue.length:0;oldLength!==newlength&&scope.onInputDone()});var unRegister=$rootScope.$on("cepTranslateChangeSuccess",updateTranslation);$rootScope.$on("$destroy",function(){unRegister()})}}}}function CepSingleCheckbox(){"use strict";return{restrict:"A",link:function(scope){var trueValue,falseValue;angular.forEach(scope.question.options,function(option){"Yes"===option.id?trueValue=option:"No"===option.id&&(falseValue=option)}),scope.$watch("checked",function(newVal){newVal?scope.question.answer=trueValue:scope.question.answer=falseValue,scope.onInputDone()})}}}function CepSplitNumberWidget(NamespaceService,$timeout,SplitNumberCalculator){"use strict";return{restrict:"E",templateUrl:"templates/form_fields/split-number-widget.html",scope:{question:"=",questionModel:"=",showValidations:"<",language:"<",isDisabled:"<",multiplicator:"@",firstInputTranslationKey:"@",secondInputTranslationKey:"@"},link:function(scope){function setupScope(){scope.firstInputTranslationKey=scope.firstInputTranslationKey,scope.secondInputTranslationKey=scope.secondInputTranslationKey,scope.multiplicator=parseInt(scope.multiplicator),scope.fillWithZeros=fillWithZeros,fillWithZeros()}function fillWithZeros(){if(angular.isDefined(scope.question.answer)){var values=SplitNumberCalculator.parse(scope.question.answer,scope.multiplicator);scope.firstValue=values[0],scope.secondValue=values[1]}}function firstValueIsSet(){var v=scope.nestedForm.firstValue.$modelValue;return null!==v&&angular.isDefined(v)&&!isNaN(v)}function secondValueIsSet(){var v=scope.nestedForm.secondValue.$modelValue;return null!==v&&angular.isDefined(v)&&!isNaN(v)}function validateQuestionModel(){scope.questionModel.$validate(),scope.questionModel.$error.invalidInputPart&&angular.forEach(scope.questionModel.$error,function(value,key){"invalidInputPart"!==key&&scope.questionModel.$setValidity(key,!0)})}function syncToModel(){if(firstValueIsSet()||secondValueIsSet()){var viewValue=SplitNumberCalculator.format([scope.firstValue||0,scope.secondValue||0],scope.multiplicator);scope.questionModel.$setViewValue(viewValue)}else scope.questionModel.$setViewValue(void 0)}setupScope();var skipSync=!1,unbindWatcher=scope.$watch("questionModel",function(newVal){newVal&&(scope.$watch("firstValue",function(){syncToModel(),skipSync=!0,$timeout(function(){skipSync=!1})}),scope.$watch("secondValue",function(){syncToModel(),skipSync=!0,$timeout(function(){skipSync=!1})}),scope.$watch("question.answer",function(newAnswer){skipSync||(angular.isDefined(newAnswer)?fillWithZeros():(scope.firstValue=void 0,scope.secondValue=void 0))}),scope.questionModel.$validators.invalidInputPart=function(){return scope.nestedForm.$valid},scope.$watch("nestedForm.firstValue.$error",validateQuestionModel,!0),scope.$watch("nestedForm.firstValue.$viewValue",validateQuestionModel),scope.$watch("nestedForm.secondValue.$error",validateQuestionModel,!0),scope.$watch("nestedForm.secondValue.$viewValue",validateQuestionModel),scope.$watch("nestedForm.secondValue.$error",function(newErrors){newErrors.numberPrecision&&angular.forEach(newErrors,function(value,key){"numberPrecision"!==key&&delete newErrors[key]})},!0),scope.$on("$destroy",function(){scope.questionModel.$setValidity("invalidInputPart",!0),delete scope.questionModel.$validators.invalidInputPart}),unbindWatcher())})}}}function CepStandardUnitNumberInput(NamespaceService){"use strict";return{restrict:"E",templateUrl:"templates/form_fields/components/standard-unit-number-input.html",scope:{question:"<",questionModel:"=",isDisabled:"<",unit:"<"},link:function(scope){var skipUndefinedSync=!0;scope.$watch("question.answer",function(newAnswer){isNaN(newAnswer)&&scope.questionModel.$error||(scope.input=parseFloat(newAnswer))}),scope.$watch("input",function(newInput){skipUndefinedSync&&!angular.isDefined(newInput)||scope.questionModel.$setViewValue(newInput),skipUndefinedSync=!1}),scope.$watch("nestedForm.nestedInput.$error.number",function(numberError){scope.questionModel.$validate(),numberError&&angular.forEach(scope.questionModel.$error,function(value,key){"number"!==key&&scope.questionModel.$setValidity(key,!0)})});var unbindWatcher=scope.$watch("questionModel",function(newVal){newVal&&(scope.questionModel.$validators.number=function(){return!NamespaceService.get(scope.nestedForm,"nestedInput.$error.number")},NamespaceService.get(scope.question,"constraints.minValue")&&(scope.questionModel.$validators.min=function(modelValue,viewValue){var emptyInput=isNaN(viewValue)||""===viewValue;return emptyInput||viewValue>=scope.question.constraints.minValue}),NamespaceService.get(scope.question,"constraints.maxValue")&&(scope.questionModel.$validators.max=function(modelValue,viewValue){var emptyInput=isNaN(viewValue)||""===viewValue;return emptyInput||viewValue<=scope.question.constraints.maxValue}),scope.$on("$destroy",function(){scope.questionModel.$setValidity("number",!0),delete scope.questionModel.$validators.number}),unbindWatcher())})}}}function CepTextArea(){"use strict";return{restrict:"A",link:function(scope){angular.isDefined(scope.renderHints.lines)?scope.multiLineTextLines=Math.max(1,parseInt(scope.renderHints.lines)):scope.multiLineTextLines=1}}}function SearchDirective($timeout,$window){"use strict";return{restrict:"E",templateUrl:"templates/form_fields/components/unicornsearch.html",require:"ngModel",scope:{load:"=",translations:"=",config:"=",searchDisabled:"=",itemToKey:"=",itemToString:"=",inputPlaceholder:"<"},link:function(scope,element,attrs,ngModel){function addSearchResults(results){scope.results=results,scope.state.nothingFound=0===results.length,openResults()}function loadingError(){scope.state.loadingError=!0,scope.state.loading=!1}function selectItem(item){scope.selectedItems||(scope.selectedItems=[]),scope.selectedItems.push(item),closeResults(),scope.config.clearOnAdd&&(scope.search="",resetResults()),activateSearchField()}function removeItem(item){scope.selectedItems.splice(scope.selectedItems.indexOf(item),1)}function isAlreadySelected(item){if(!scope.selectedItems)return!1;for(var i=0;i<scope.selectedItems.length;++i)if(scope.itemToKey(scope.selectedItems[i])===scope.itemToKey(item))return!0;return!1}function activateSearchField(){scope.searchDisabled||(getSearchFieldElement().focus(),scope.config.selectOnClick&&getSearchFieldElement().select(),scope.results&&scope.results.length&&!scope.state.open&&openResults())}function openResults(){scope.state.open=!0,$window.addEventListener("click",onClickOrFocusOutside)}function closeResults(){$timeout(function(){scope.state.open=!1}),$window.removeEventListener("click",onClickOrFocusOutside)}function resetResults(){scope.results=[],closeResults(),scope.state.nothingFound=!1,scope.state.loadingError=!1}function clear(){ngModel.$setViewValue([]),scope.results=[],scope.search="",activateSearchField()}function requestTouched(){touchedPending=!0}function onClickOrFocusOutside(event){event.target instanceof Node&&!element[0].contains(event.target)&&(closeResults(),scope.$$phase||scope.$root.$$phase||scope.$apply())}function getFirstSelectableItemFromResults(){for(var i=0;i<scope.results.length;i++)if(!isAlreadySelected(scope.results[i]))return scope.results[i]}function getSearchFieldElement(){return searchField||(searchField=element.find("input")[0]),searchField}function focusResult($event){"BUTTON"===$event.currentTarget.tagName&&$event.currentTarget.focus()}function handleKeyboardInput(event){var backspace=8,down=40,up=38,esc=27,enter=13,pressed=event.keyCode;if(pressed===down||pressed===up){var selectables=element[0].querySelectorAll(".unicorn-search__focusable");openResults(),$timeout(function(){var index=[].indexOf.call(selectables,event.target),nextIndex=pressed===down?index+1:index-1;(nextIndex>=selectables.length||nextIndex<0)&&(nextIndex=pressed===down?0:selectables.length-1),selectables[nextIndex].focus()}),event.preventDefault()}else if(pressed===backspace)0===getSearchFieldElement().selectionStart&&0===getSearchFieldElement().selectionEnd&&(scope.selectedItems.pop(),event.preventDefault());else if(pressed===esc)activateSearchField(),closeResults();else if(pressed===enter&&event.currentTarget===getSearchFieldElement()){event.preventDefault();var firstSelectableItem=getFirstSelectableItemFromResults();scope.state.open===!0&&firstSelectableItem&&selectItem(firstSelectableItem)}}var currentTimeout,searchField,touchedPending=!1;scope.config=scope.config||{},scope.config.delay=scope.config.delay||400,scope.config.minChars=scope.config.minChars||3,scope.itemToKey=scope.itemToKey||function(item){return item.id},scope.itemToString=scope.itemToString||function(item){return item.label},scope.ngModel=ngModel,scope.selectedItems=[],scope.selectItem=selectItem,scope.removeItem=removeItem,scope.isAlreadySelected=isAlreadySelected,scope.activateSearchField=activateSearchField,scope.closeResults=closeResults,scope.openResults=openResults,scope.focusResult=focusResult,scope.clear=clear,scope.results=[],scope.requestTouched=requestTouched,scope.handleKeyboardInput=handleKeyboardInput,scope.getFirstSelectableItemFromResults=getFirstSelectableItemFromResults,scope.state={open:!1,loading:!1,nothingFound:!1,loadingError:!1,tooLessLetters:!1,focused:!1,maximumReached:!1},scope.$watch("search",function(searchTerm){return scope.state.maximumReached?void(scope.search=""):(resetResults(),void(searchTerm&&(scope.state.tooLessLetters=searchTerm.length<scope.config.minChars,searchTerm.length>=scope.config.minChars&&(currentTimeout&&($timeout.cancel(currentTimeout),currentTimeout=void 0),currentTimeout=$timeout(function(){scope.state.loading=!0,scope.load(searchTerm).then(addSearchResults).then(function(){scope.state.loading=!1})["catch"](loadingError)},scope.config.delay)))))}),scope.$watchCollection("ngModel.$modelValue",function(n){n!==scope.selectedItems&&(scope.selectedItems=n)}),scope.$watchCollection("selectedItems",function(n){ngModel.$setViewValue(n);var length=scope.selectedItems?scope.selectedItems.length:0;attrs.required&&ngModel.$setValidity("required",length>0),scope.state.maximumReached=length>=scope.config.maxItems,scope.state.maximumReached&&(scope.search="",resetResults())}),scope.$on("questionnaire:assessmentFactorGroup:deleteRequest",function(evt,qid){for(var i=0;i<scope.selectedItems.length;++i){var item=scope.selectedItems[i];if(item.id===qid){removeItem(item);break}}})}}}function CepBlockedPaginationAlert($timeout,NamespaceService,questionnaireConfig){"use strict";return{restrict:"E",templateUrl:"templates/pagination/pagination-blocked-alert.html",link:function(scope){var runningTimeout,delay=NamespaceService.get(questionnaireConfig,"pagination.dismissAlertDelay");scope.$on("questionnaire:pagination:start",function(){scope.alertDismissed=!1,scope.paginationBlockedReason=!1}),scope.$on("pagination:blocked",function(ev,pageIndex){scope.paginationBlockedReason=pageIndex>scope.currentIndex+1?"stepwise":"validity",!scope.alertDismissed&&delay>0&&(runningTimeout=$timeout(function(){runningTimeout=null,scope.dismissAlert(),scope.$digest()},delay,!1))}),scope.dismissAlert=function(){scope.alertDismissed=!0,runningTimeout&&($timeout.cancel(runningTimeout),runningTimeout=null)}}}}function CepBreadcrumbPagination(cepTranslate){"use strict";return{restrict:"E",templateUrl:"templates/pagination/pagination-breadcrumb.html",link:function(scope){function getPageCaption(page){var translationKey="components.pagination.pageTitle."+page.id.replace(/\./g,"_"),translation=cepTranslate.translate(translationKey,scope.language);return translation===translationKey?page.caption:translation}scope.getPageCaption=getPageCaption}}}function CepFullPagination(){"use strict";return{restrict:"E",templateUrl:"templates/pagination/pagination-full.html"}}function CepPagination($rootScope,cepTranslate,questionnaireConfig,QuestionTreeService,NamespaceService,PaginationService,FocusService,$q){"use strict";return{restrict:"E",template:"<ng-transclude></ng-transclude>",
transclude:!0,link:function(scope){function updateScope(){if(angular.isDefined(NamespaceService.get(scope,"$parent.application.questionnaire"))&&groupPaginationIsActive()){if(scope.pages=createPageArray(),scope.allPageIds=PaginationService.getTopLevelGroupIds(scope.$parent.application)||[],scope.currentPage=scope.pages.filter(function(page){return isCurrentPage(page)})[0],scope.currentIndex=scope.pages.indexOf(scope.currentPage),setKnown(scope.currentPage),!scope.highestKnownPage||scope.highestKnownPage.index<scope.currentIndex.index){var alreadyKnownPages=scope.pages.filter(function(page){return page.alreadySeenByUser});scope.highestKnownPage=alreadyKnownPages[alreadyKnownPages.length-1]}scope.questionnaireIsInvalid=questionnaireIsInvalid(),scope.userHasNotSeenAllPages=userHasNotSeenAllPages()}}function goForward(){var nextPage=scope.pages[scope.currentIndex+1];angular.isDefined(nextPage)&&goToPage(nextPage)}function goBackwards(){var previousPage=scope.pages[scope.currentIndex-1];angular.isDefined(previousPage)&&goToPage(previousPage)}function goToPage(page){function doNavigate(){if(isNavigationToAllowed(page))scope.$parent.currentPageId=page.id;else{var firstQuestionToRevise=findFirstQuestionToRevise();setFocus(firstQuestionToRevise).then(setReasonAndForceValidation)}}function setFocus(question){return angular.isDefined(question)?FocusService.activateQuestionById(question.id,!0):$q.when()}function setReasonAndForceValidation(){scope.$broadcast("pagination:blocked",page.index),scope.$parent.forceValidations=!0}isCurrentPage(page)||(scope.$broadcast("questionnaire:pagination:start"),scope.$parent.$broadcast("questionnaire:onbeforesubmit"),$rootScope.$broadcast("questionnaire:doAutoSubmit",doNavigate))}function findFirstQuestionToRevise(){var matchers=[QuestionTreeService.commonMatchers.questionIsNew,QuestionTreeService.commonMatchers.questionIsInvalid,QuestionTreeService.commonMatchers.questionHasNewWarnings];return QuestionTreeService.findQuestionInTreeThatMatches(scope.currentPage.questionObject,matchers)}function isNavigationToAllowed(targetPage){var freePagination=NamespaceService.get(questionnaireConfig,"pagination.freePagination"),ignoreValidityOnBackwardsPagination=NamespaceService.get(questionnaireConfig,"pagination.ignoreValidityOnBackwardsPagination");if(!targetPage||!scope.highestKnownPage)return!1;if(freePagination)return!0;if(isCurrentPage(targetPage))return!0;if(targetPage.index<scope.currentPage.index)return ignoreValidityOnBackwardsPagination||currentPageIsFinished();if(targetPageHasBeenSeen(targetPage))return currentPageIsFinished();if(isFirstUnknownPage(targetPage)){var pages=createPageArray(function(page){return page.index<targetPage.index}),validPages=pages.filter(function(page){return"valid"===getPageValidationState(page)});return currentPageIsFinished()&&pages.length===validPages.length}return!1}function targetPageHasBeenSeen(targetPage){return targetPage.index>scope.currentPage.index&&targetPage.index<=scope.highestKnownPage.index}function isFirstUnknownPage(targetPage){return targetPage.index===scope.highestKnownPage.index+1}function currentPageIsFinished(){return scope.$parent.questionForm.$valid&&angular.isUndefined(findFirstQuestionToRevise())}function isCurrentPage(page){return PaginationService.isGroupActive(scope.allPageIds,scope.$parent.currentPageId,page.id)}function getPageValidationAnnotation(page){if(shouldShowPageValidationIcon(page))switch(getPageValidationState(page)){case"error":return cepTranslate.translate("components.pagination.errors.pageValidationError",scope.language);case"warning":return cepTranslate.translate("components.pagination.errors.pageValidationWarning",scope.language)}}function getPageValidationState(page){var hasErrors;if(hasErrors=isCurrentPage(page)?scope.$parent.questionForm.$invalid:QuestionTreeService.findQuestionInTreeThatMatches(page.questionObject,[QuestionTreeService.commonMatchers.questionIsInvalid]))return"error";var matchers=[QuestionTreeService.commonMatchers.questionHasWarnings];return QuestionTreeService.findQuestionInTreeThatMatches(page.questionObject,matchers)?"warning":"valid"}function shouldShowPageValidationIcon(page){return page.alreadySeenByUser&&!isCurrentPage(page)}function questionnaireIsInvalid(){if(!scope.pages)return!0;for(var i=0;i<scope.pages.length;++i){var page=scope.pages[i];if(!isCurrentPage(page)&&QuestionTreeService.findQuestionInTreeThatMatches(page.questionObject,[QuestionTreeService.commonMatchers.questionIsInvalid]))return!0}return!currentPageIsFinished()}function userHasNotSeenAllPages(){if(!scope.pages)return!0;for(var i=0;i<scope.pages.length;++i){var page=scope.pages[i];if(!page.alreadySeenByUser)return!0}return!1}function disableBtnNext(){return!scope.pages||scope.currentPage.index+1===scope.pages.length}function disableBtnPrevious(){return!scope.currentPage||0===scope.currentPage.index}function createPageArray(filterFn){for(var onlyGroups=function(question){return"group"===question.type},questions=NamespaceService.get(scope,"$parent.application.questionnaire.questions")||[],groups=questions.filter(onlyGroups),pageArray=[],i=0;i<groups.length;++i)pageArray.push({index:i,id:groups[i].id,caption:groups[i].caption,alreadySeenByUser:NamespaceService.get(groups[i],"meta.cep.ui.pageAlreadySeenByUser"),questionObject:groups[i]});return filterFn?pageArray.filter(filterFn):pageArray}function setKnown(page){page.alreadySeenByUser=!0,NamespaceService.extend(page.questionObject,"meta.cep.ui.pageAlreadySeenByUser"),page.questionObject.meta.cep.ui.pageAlreadySeenByUser=!0}function groupPaginationIsActive(){return"QuestionGroup"===scope.$parent.paginationMode}scope.goForward=goForward,scope.goBackwards=goBackwards,scope.goToPage=goToPage,scope.disableBtnPrevious=disableBtnPrevious,scope.disableBtnNext=disableBtnNext,scope.getPageValidationState=getPageValidationState,scope.shouldShowPageValidationIcon=shouldShowPageValidationIcon,scope.questionnaireIsInvalid=questionnaireIsInvalid(),scope.userHasNotSeenAllPages=userHasNotSeenAllPages(),scope.isCurrentPage=isCurrentPage,scope.getPageValidationAnnotation=getPageValidationAnnotation,scope._isNavigationToAllowed=isNavigationToAllowed,scope.$watch("$parent.application.questionnaire",function(){updateScope()},!0),scope.$watch("$parent.paginationMode",function(){updateScope()}),scope.$watch("$parent.questionForm.$valid",function(n,o){n!==o&&updateScope()}),scope.$watch("$parent.currentPageId",function(){updateScope()})}}}function CepPrevNextPagination(){"use strict";return{restrict:"E",templateUrl:"templates/pagination/pagination-prev-next.html"}}function cepAutoSubmitButton($rootScope,$timeout){"use strict";return{restrict:"E",templateUrl:"templates/auto-submit-button.html",link:function($scope){function triggerAutoSubmit(){$scope.autoSubmitInProgress=!0,$rootScope.$broadcast("questionnaire:doAutoSubmit",function(){showOkIcon()})}function showOkIcon(){$timeout(function(){$scope.autoSubmitInProgress=!1,$scope.autoSubmitOK=!0,$timeout(function(){$scope.autoSubmitOK=!1},2e3)})}$scope.triggerAutoSubmit=triggerAutoSubmit}}}function cepPdfLink(questionnaireConfig){"use strict";return{restrict:"E",templateUrl:"templates/pdf-link.html",scope:{dct:"@doctype",assessmentId:"@assessmentId",filename:"@filename"},link:function(scope){var url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.documentServicePath+"/"+scope.assessmentId,dctSet=!1;if(scope.dct&&""!==scope.dct&&(url=url+"?doctype="+scope.dct,dctSet=!0),scope.filename&&""!==scope.filename){var symbol="?";dctSet===!0&&(symbol="&"),url=url+symbol+"filename="+scope.filename}scope.pdfUrl=url}}}function CepQuestionnaireLegend(questionnaireConfig){"use strict";return{restrict:"E",templateUrl:"templates/questionnaire-legend.html",scope:!0,link:function(scope){scope.config=questionnaireConfig.questionAnnotation}}}function CepQuestionReminder($window,$document,$timeout,FocusService){"use strict";return{restrict:"E",templateUrl:"templates/question-reminder.html",link:function(scope,element,attrs){function throttledUpdateValues(){angular.isUndefined(postPoner)&&(postPoner=$timeout(updateValues,200))}function updateValues(){postPoner=void 0,scope.unansweredQuestionsAbove=[].slice.call($document[0].querySelectorAll(".question-container.unanswered.required:not(.type-struct):not(.type-list) > div > cep-question-template:not(.cep-question-struct)")).filter(isAbove),scope.invalidQuestionsAbove=[].slice.call($document[0].querySelectorAll(".question-container.invalid:not(.type-struct):not(.type-list) > div > cep-question-template, .question-container:not(.unanswered):not(.required) > div > question-template .form-group.has-error")).filter(isAbove)}function isAbove(element){var scrollTop=$window.pageYOffset||document.documentElement.scrollTop;return offset(element)-(attrs.offset||0)<scrollTop}function offset(el){var rect=el.getBoundingClientRect(),scrollTop=$window.pageYOffset||document.documentElement.scrollTop;return rect.bottom+scrollTop}function jumpToFirstUnansweredOrInvalidQuestion(){var firstElement=$document[0].querySelectorAll(".question-container.unanswered.required, .question-container.invalid, .question-container:not(.required) .question-template .form-group.has-error")[0];FocusService.activateFirstInputInsideElement(firstElement,!0)["finally"](function(){scope.unansweredQuestionsAbove=[],scope.invalidQuestionsAbove=[],maximize()})}function minimize(event){event.stopPropagation(),scope.minimized=!0}function maximize(event){angular.isDefined(event)&&event.stopPropagation(),scope.minimized=!1}scope.unansweredQuestionsAbove=[],scope.invalidQuestionsAbove=[],scope.jumpToFirstUnansweredOrInvalidQuestion=jumpToFirstUnansweredOrInvalidQuestion,scope.minimized=!1,scope.minimize=minimize,scope.maximize=maximize;var postPoner;$window.addEventListener("scroll",throttledUpdateValues),$window.addEventListener("resize",throttledUpdateValues)}}}function CepRequestAssistanceButton(ApplicationDataService,RequestAssistanceInterceptorService,NamespaceService,NotificationService,$q){"use strict";return{restrict:"E",templateUrl:"templates/request-assistance-button.html",replace:!0,transclude:!0,scope:{application:"<",assessmentId:"<"},link:function($scope){$scope.requestInProgress=!1,$scope.requestAssistance=function(){$scope.requestInProgress=!0,RequestAssistanceInterceptorService.requestAssistanceAndResolveContext($scope,$scope.assessmentId).then(function(context){return context!==!1?(context.products=$scope.application.products,context.language=$scope.application.language,context.state="new",context.date=new Date,ApplicationDataService.requestAssistance($scope.assessmentId,context).then(function(){return NamespaceService.extend($scope.application,"meta.cep.ui"),$scope.application.meta.cep.ui.requestedAssistance=!0,ApplicationDataService.sync($scope.assessmentId,$scope.application)})):$q.when()})["catch"](NotificationService.handleError("Could not request for help","Error"))["finally"](function(){$scope.requestInProgress=!1})}}}}function CepSpinner(questionnaireConfig){"use strict";return{restrict:"E",templateUrl:"templates/spinner.html",scope:{showDelayWarning:"=",show:"="},link:function(scope){var configFallback={backdrop:!1,spinner:!1};scope.spinnerConfig=questionnaireConfig.blockingQuestionnaire||configFallback}}}function cepSubmitButton(){"use strict";return{restrict:"E",templateUrl:"templates/submit-button.html",scope:{shouldBeHidden:"=",shouldBeDisabled:"=",submitFunction:"="}}}function cepTransferWriteAuthorityButton($rootScope){"use strict";return{restrict:"E",templateUrl:"templates/transfer-write-authority-btn.html",replace:!0,scope:{application:"<",assessmentRole:"@"},link:function($scope){$scope.$watchGroup(["requestInProgress","assessmentRole","application.meta.cep.activeRole"],function(newValues){var requestInProgress=newValues[0],newRole=newValues[1],newActiveRole=newValues[2];$scope.disabled=requestInProgress===!0||newRole!==newActiveRole}),$scope.cepTransferWriteAuthority=function(){var requestDoneCallback=function(){$scope.requestInProgress=!1};$rootScope.$broadcast("questionnaire:transferWriteAuthority",requestDoneCallback),$scope.requestInProgress=!0}}}}function RasToLocaleDate(DateConversionService){"use strict";return function(string){return DateConversionService.rasToLocaleDate(string)||string}}function ApplicationDataService($http,$q,questionnaireConfig){"use strict";function sync(assessmentId,applicationData,timeout){var url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+assessmentId;return $http.put(url,applicationData,{timeout:timeout}).then(function(response){return 204===response.status?$q.when({applicationData:applicationData}):$q.reject("unexpected response code "+response.status)})}function assess(assessmentId,applicationData,optLang,timeout){var postRequest,url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+assessmentId;return postRequest=angular.isDefined(optLang)?$http.post(url,applicationData,{params:{lang:optLang},timeout:timeout}):$http.post(url,applicationData,{timeout:timeout}),postRequest.then(function(response){return{applicationData:response.data,status:response.status}})}function requestAssistance(assessmentId,context){var url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+assessmentId+"/requestAssistance";return $http.post(url,context)}function transferWriteAuthority(assessmentId){var url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+assessmentId+"/transferWriteAuthority";return $http.post(url).then(function(response){return response.data})}function loadApplicationData(assessmentId,timeout,optLang){var url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+assessmentId;return angular.isDefined(optLang)?$http.get(url,{params:{lang:optLang},timeout:timeout}).then(function(response){return response.data}):$http.get(url,{timeout:timeout}).then(function(response){return response.data})}return{assess:assess,loadApplicationData:loadApplicationData,sync:sync,requestAssistance:requestAssistance,transferWriteAuthority:transferWriteAuthority}}function AutosaveService($window,$timeout,$q,questionnaireConfig){"use strict";function registerAutosave($scope,autosaveCallback){function scheduleAutosaveInterval(){cancelAutosaveInterval();var nextAutosaveInterval=Math.max(1,interval-(Date.now()-latestAutosaveAttemptTime)),onTimeout=function(){performAutosave()["finally"](function(){angular.isDefined(scheduledAutosave)&&!scheduledAutosave.isRejected&&scheduleAutosaveInterval()})};scheduledAutosave=$timeout(onTimeout,nextAutosaveInterval,1)}function cancelAutosaveInterval(){angular.isDefined(scheduledAutosave)&&($timeout.cancel(scheduledAutosave),scheduledAutosave=void 0)}function performAutosave(){return autosaveCallback()["finally"](function(){latestAutosaveAttemptTime=Date.now()})}if(questionnaireConfig.autoSaveEnabled!==!0)return angular.noop;var scheduledAutosave,interval=questionnaireConfig.autoSaveInterval,latestAutosaveAttemptTime=Date.now(),visibilityChangeListener=function(){$scope.$apply(function(){var visibilityState=$window.document.visibilityState;"visible"===visibilityState?scheduleAutosaveInterval():"hidden"!==visibilityState&&"unloaded"!==visibilityState||(cancelAutosaveInterval(),performAutosave())})};return $window.document.addEventListener("visibilitychange",visibilityChangeListener),$scope.$on("$destroy",function(){$window.document.removeEventListener("visibilitychange",visibilityChangeListener),cancelAutosaveInterval()}),scheduleAutosaveInterval(),function(any){return latestAutosaveAttemptTime=Date.now(),scheduleAutosaveInterval(),any}}return{registerAutosave:registerAutosave}}function DateConversionService(cepTranslate,$filter){"use strict";function dateToRas(date,precision){if(date&&precision)return moment(date).format(getFormat(precision))}function getFormat(precision){return rasFormats[precision]||rasFormats.day}function rasToDate(string){var format=extractFormat(string);if(string&&format){var momentDate=moment(string,format);return momentDate.toDate()}}function extractFormat(rasString){return/^[0-9]{4}$/.test(rasString)?rasFormats.year:/^[0-9]{4}\-[0-9]{2}$/.test(rasString)?rasFormats.month:/^[0-9]{4}(\-[0-9]{2}){2}$/.test(rasString)?rasFormats.day:/^[0-9]{4}(\-[0-9]{2}){2}T([0-9]{2})$/.test(rasString)?rasFormats.hour:/^[0-9]{4}(\-[0-9]{2}){2}T([0-9]{2}):([0-9]{2})$/.test(rasString)?rasFormats.minute:void 0}function rasToLocaleDate(string,language,precision){if(string){var localeFormat,dateFilter=$filter("date"),format=precision?getFormat(precision):extractFormat(string);switch(format){case rasFormats.year:localeFormat=cepTranslate.translate("components.date.formats.year",language);break;case rasFormats.month:localeFormat=cepTranslate.translate("components.date.formats.month",language);break;case rasFormats.hour:localeFormat=cepTranslate.translate("components.date.formats.hour",language);break;case rasFormats.minute:localeFormat=cepTranslate.translate("components.date.formats.minute",language);break;default:localeFormat=cepTranslate.translate("components.date.formats.day",language)}localeFormat=localeFormat.replace("M!","M").replace("d!","d");var date=rasToDate(string);return dateFilter(date,localeFormat)}}var rasFormats={year:"YYYY",month:"YYYY-MM",day:"YYYY-MM-DD",hour:"YYYY-MM-DDTHH",minute:"YYYY-MM-DDTHH:mm"};return{dateToRas:dateToRas,rasToDate:rasToDate,rasToLocaleDate:rasToLocaleDate}}function DiffpatchService(){"use strict";function trimAngularPrefixedProperties(obj){var trimmedObject={};for(var name in obj)"$$"!==name.slice(0,2)&&(trimmedObject[name]=obj[name]);return trimmedObject}function angularObjectPropertyTrimFilter(context){context.leftIsArray||"object"!==context.leftType||(context.left=trimAngularPrefixedProperties(context.left)),context.rightIsArray||"object"!==context.rightType||(context.right=trimAngularPrefixedProperties(context.right))}function cepObjectHash(obj,idx){return angular.isDefined(obj.id)&&angular.isDefined(obj.label)?obj.id+"_"+obj.label:angular.isDefined(obj.id)?obj.id:idx}return{create:function(){var diffpatcher=jsondiffpatch.create({objectHash:cepObjectHash});return diffpatcher.processor.pipes.diff.before("objects",angularObjectPropertyTrimFilter),diffpatcher}}}function FocusService($q,ScrollToService){"use strict";function activateFirstInvalidQuestion(element){var selector=["unicorn-search.ng-invalid .unicorn-search__inner input","input:not([type=hidden]).ng-invalid",".special-number-widget.ng-invalid","textarea.ng-invalid","input[type=hidden].ng-invalid + div:not(.cep-custom-widget) input","input[type=hidden].ng-invalid + .cep-custom-widget .focusable"].join(","),firstInvalidElement=element.querySelectorAll(selector)[0];return firstInvalidElement&&firstInvalidElement.classList.contains("special-number-widget")&&(firstInvalidElement=determineNestedSpecialNumberInputToFocusOnError(firstInvalidElement)),scrollToAndFocusDomElement(firstInvalidElement)}function scrollToAndFocusDomElement(domElement,preventScrolling){return domElement?preventScrolling?(angular.isFunction(domElement.focus)&&domElement.focus(),$q.when()):ScrollToService.scrollToElement(domElement).then(function(elem){return angular.isFunction(domElement.focus)&&domElement.focus(),elem}):$q.reject("Element to activate not found.")}function determineNestedSpecialNumberInputToFocusOnError(firstInvalidElement){var candidates=$(firstInvalidElement).find("input:not([type=hidden]).ng-invalid");return candidates.length||(candidates=$(firstInvalidElement).find("input:not([type=hidden])")),candidates[0]?candidates[0]:firstInvalidElement}function activateQuestionById(questionId,doScroll){var i,activeQuestionElement,focusCandidateElements=document.querySelectorAll(".question-form-field, .question-group");for(i=0;i<focusCandidateElements.length;i++)if($(focusCandidateElements[i]).data("question-id")===questionId){activeQuestionElement=focusCandidateElements[i];break}return activateFirstInputInsideElement(activeQuestionElement,doScroll)}function activateFirstInputInsideElement(parent,doScroll){if(parent){var toActivate=parent.querySelectorAll("textarea, input:not([type=hidden]), select, .focussable")[0];return scrollToAndFocusDomElement(toActivate,!doScroll)}return $q.reject("element to activate not found")}return{activateFirstInvalidQuestion:activateFirstInvalidQuestion,activateQuestionById:activateQuestionById,activateFirstInputInsideElement:activateFirstInputInsideElement}}function LanguageSelectionService(cepTranslate,$rootScope){"use strict";function selectLanguage(language){cepTranslate.isConfigured(language)&&$rootScope.$broadcast("questionnaire:changeLanguage",language)}return{selectLanguage:selectLanguage}}function NotificationService($rootScope,$q){"use strict";function notifyError(messagetext,headline,error){notify("error",messagetext,headline,error)}function notifyWarning(messagetext,headline,error){notify("warning",messagetext,headline,error)}function notifyInfo(messagetext,headline,error){notify("info",messagetext,headline,error)}function handleError(messagetext,headline){return function(error){return notifyError(messagetext,headline,error),$q.reject(error)}}function notify(errortype,messagetext,headline,error){$rootScope.$broadcast("questionnaire:notification",{type:errortype,message:messagetext,headline:headline,error:error})}return{notifyInfo:notifyInfo,notifyWarning:notifyWarning,notifyError:notifyError,handleError:handleError}}function PaginationService(NamespaceService){"use strict";function isGroupActive(pageIds,currentPageId,groupId){return pageIdIsValid(currentPageId,pageIds)?groupId===currentPageId:groupId===pageIds[0]}function getTopLevelGroupIds(application){var onlyGroups=function(question){return"group"===question.type||"assessment-factor-group"===question.type},extractIds=function(question){return question.id},questions=NamespaceService.get(application,"questionnaire.questions")||[];return questions.filter(onlyGroups).map(extractIds)}function pageIdIsValid(currentPageId,pageIds){return angular.isDefined(currentPageId)&&pageIds.indexOf(currentPageId)!==-1}return{isGroupActive:isGroupActive,getTopLevelGroupIds:getTopLevelGroupIds}}function ProductValidationService(NotificationService,cepTranslate){"use strict";function notifyOnValidations(applicationData,language){applicationData.products&&applicationData.products.forEach(function(product){product.messages&&product.messages.forEach(notify.bind(void 0,language)),product.riders&&product.riders.forEach(function(rider){rider.messages&&rider.messages.forEach(notify.bind(void 0,language))})})}function notify(language,message){"error"===message.type?NotificationService.notifyError(message.message,cepTranslate.translate("products.validation.error",language)):"warning"===message.type?NotificationService.notifyWarning(message.message,cepTranslate.translate("products.validation.warning",language)):"info"===message.type&&NotificationService.notifyInfo(message.message,cepTranslate.translate("products.validation.info",language))}return{notifyOnValidations:notifyOnValidations}}function QuestionTreeService(NamespaceService){"use strict";function preProcessTree(applicationTree){addAnswers(applicationTree.questionnaire.questions),addLevelMetaData(applicationTree.questionnaire.questions)}function addAnswers(tree){var i,question;for(i in tree)question=tree[i],question&&("assessment-factor-search"!==question.type||question.answer||(question.answer=[]),question.questions&&addAnswers(question.questions))}function forEachQuestion(tree,fn){for(var i in tree){var question=tree[i];question&&(fn(question),question.questions&&forEachQuestion(question.questions,fn),"struct"===question.type&&angular.isArray(question.elements)&&forEachQuestion(question.elements,fn),"list"===question.type&&angular.isArray(question.answer)&&forEachQuestion(question.answer,fn))}}function addLevelMetaData(tree,level){var i,isNotVirtual,question,thisLevel=level||1;for(i in tree)question=tree[i],question&&(isNotVirtual="virtual"!==question.type,isNotVirtual&&thisLevel>-1&&addMetaData(question,"level",thisLevel),question.questions&&(isNotVirtual?addLevelMetaData(question.questions,thisLevel+1):addLevelMetaData(question.questions,thisLevel)))}function addAutoSubmitMetaData(application,isAutoSubmit){application&&(isAutoSubmit===!0?(NamespaceService.extend(application,"meta.cep.ui"),application.meta.cep.autoSubmit=!0):(NamespaceService.extend(application,"meta.cep"),application.meta.cep.autoSubmit=!1))}function addMetaData(element,property,value){NamespaceService.extend(element,"meta.cep.ui"),element.meta.cep.ui[property]=value}function generateFormFieldId(question){function makeIdSafe(token){return angular.isUndefined(token)?void 0:token.replace(/\./g,"_").replace(/-/g,"_")}var id=question.id,metaId=NamespaceService.get(question,"meta.cep.ui.id")||"";return"q_"+makeIdSafe(id)+"_"+makeIdSafe(metaId)+"_input"}function questionMatches(question,currentMatcher){if(angular.isUndefined(question)||angular.isUndefined(currentMatcher))return!1;if(angular.isFunction(currentMatcher))return currentMatcher(question);throw"Unrecognized Matcher: "+angular.toJson(currentMatcher)}function findQuestionInTreeThatMatches(questionTree,matchers){if(questionTree){for(var m=0;m<matchers.length;m++)if(questionMatches(questionTree,matchers[m]))return questionTree;for(var i=0;angular.isArray(questionTree.questions)&&i<questionTree.questions.length;++i){var returnCandidate=findQuestionInTreeThatMatches(questionTree.questions[i],matchers);if(angular.isDefined(returnCandidate))return returnCandidate}}}function questionHasFields(patternObject){return function(question){for(var keys=Object.keys(patternObject),i=0;i<keys.length;++i)if(!angular.equals(patternObject[keys[i]],question[keys[i]]))return!1;return!0}}function findNextQuestionSameLevelOrHigher(node,question){function findNextRecursively(node,question){var questions=node.questions;if(questions)for(var i=0;i<questions.length;i++){var currentQuestion=questions[i];if(currentQuestion.id===question.id)found=!0;else{if(found)return currentQuestion;var recursive=findNextRecursively(currentQuestion,question);if(recursive)return recursive}}}var found=!1;return findNextRecursively(node,question)}var commonMatchers={questionHasWarnings:function(question){for(var i=0;angular.isArray(question.messages)&&i<question.messages.length;++i)if("warning"===question.messages[i].type)return!0;return!1},questionHasNewWarnings:function(question){for(var i=0;angular.isArray(question.messages)&&i<question.messages.length;++i)if("warning"===question.messages[i].type&&question.messages[i].isNew)return!0;return!1},questionHasServerValidationRuleMessage:function(question){return angular.isArray(question.messages)&&question.messages.length>0},hasFields:questionHasFields,questionIsInvalid:function(question){switch(question.answerState){case void 0:case"valid":case"absent":return!1;default:return!0}},questionIsNew:questionHasFields({isNew:!0})};return{preProcessTree:preProcessTree,addAutoSubmitMetaData:addAutoSubmitMetaData,generateFormFieldId:generateFormFieldId,findNextQuestionSameLevelOrHigher:findNextQuestionSameLevelOrHigher,findQuestionInTreeThatMatches:findQuestionInTreeThatMatches,commonMatchers:commonMatchers,forEachQuestion:forEachQuestion,addMetaData:addMetaData}}function RenderHintService(NamespaceService){"use strict";function createRenderHintObject(question){var renderHints=NamespaceService.get(question,"tags.RenderHint")||[],result={};try{return angular.forEach(renderHints,function(renderHint){result=angular.merge(result,angular.fromJson(renderHint))}),result}catch(e){return{}}}return{createRenderHintObject:createRenderHintObject}}function ScrollToService($q,$window,smoothScroll){"use strict";function scrollToElement(element){var deferred=$q.defer(),offsetTarget=$(element).offset().top,distance=$window.pageYOffset+offsetTop-offsetTarget,duration=isNaN(distance)?maxDuration/2:Math.max(1,distance*durationPerPixel),options={duration:Math.min(duration,maxDuration),easing:"easeInQuart",offset:offsetTop,callbackAfter:function(elem){deferred.resolve(elem)}};return smoothScroll(element,options),deferred.promise}var durationPerPixel=.3,maxDuration=1e3,offsetTop=180;return{scrollToElement:scrollToElement}}function SearchService($resource,NotificationService,NamespaceService,questionnaireConfig,$qq){"use strict";function load(application,question,assessmentId,input,successCallback,searchComponentErrorHandler){var kb=application.meta.ras.knowledgebase,href=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.search,params={kbId:kb.id,kbVersion:kb.version,questionId:question.searchId,q:input||"",language:application.language},actions={get:{cancellable:!0}},resource=$resource(href+"/:kbId/:kbVersion/:questionId",{},actions);NamespaceService.get(question,"meta.cep.requiresSearchContextQuestions")===!0&&(params.assessmentId=assessmentId);var performSearch=function(timeout){var cancelableGet=resource.get(params);return timeout["finally"](cancelableGet.$cancelRequest),cancelableGet.$promise};$qq.observeTimeout(performSearch,questionnaireConfig.backendTimeoutWarning,questionnaireConfig.backendTimeout,function(){})().then(successCallback)["catch"](searchComponentErrorHandler)["catch"](NotificationService.handleError("error.loadSearchResult.message","error.loadSearchResult.headline"))}return{load:load}}function ServerSentEventService($rootScope,$window){"use strict";function newEventSource(url){function consumeEvent(callback,event){$rootScope.$$phase||$rootScope.$apply(function(){callback(angular.fromJson(event.data))})}function on(type,callback){return!!eventSource&&(eventSource.addEventListener(type,consumeEvent.bind(null,callback),!1),!0)}function off(type){eventSource&&type&&eventSource.removeEventListener(type,consumeEvent,!1)}function close(){eventSource&&(eventSource.close(),eventSource=null)}var eventSource=new $window.EventSource(url);return eventSource.onError=function(){eventSource.close(),eventSource=null},{on:on,off:off,close:close}}return{newEventSource:newEventSource}}function SplitNumberCalculator(){"use strict";function parse(val,multiplicator){var val2=val%multiplicator,val1=(val-val2)/multiplicator;return[val1,val2]}function format(viewValues,multiplicator){return viewValues[0]*multiplicator+viewValues[1]}return{parse:parse,format:format}}!function(){"use strict";function CepTranslateProvider(){function registerLanguage(localeKey,translationTable,prototypeLocale){if(localeKey&&"en"!==localeKey&&translationTable){var prototypeLocaleKey=determinePrototypeLocale(localeKey,prototypeLocale);enqueueLocale(localeKey,translationTable,prototypeLocaleKey)}}function determinePrototypeLocale(localeKey,prototypeLocaleKey){if(angular.isUndefined(prototypeLocaleKey)){var reducedLocaleKey=reduceLocaleKey(localeKey);return reducedLocaleKey.length<localeKey.length?reducedLocaleKey:"en"}return localeKey===prototypeLocaleKey?"en":prototypeLocaleKey}function reduceLocaleKey(localeKey){var indexOfLastSeparator=localeKey.lastIndexOf("-");return indexOfLastSeparator>-1?localeKey.substring(0,indexOfLastSeparator):localeKey}function enqueueLocale(localeKey,translationTable,prototypeLocaleKey){localeQueue.hasOwnProperty(prototypeLocaleKey)||(localeQueue[prototypeLocaleKey]=[]),localeQueue[prototypeLocaleKey].push({key:localeKey,table:translationTable})}function processLocaleStack(prototypeLangKey,limitRecursionDepth,dequeueLangKey){if(3!==limitRecursionDepth){var dequeueKey=angular.isDefined(dequeueLangKey)?dequeueLangKey:prototypeLangKey,waitingLocales=dequeueLocales(dequeueKey);angular.forEach(waitingLocales,function(waitingLocale){registerNewTranslation(waitingLocale.key,waitingLocale.table,prototypeLangKey),processLocaleStack(waitingLocale.key,limitRecursionDepth+1)})}}function dequeueLocales(prototypeLangKey){var result=[];return localeQueue.hasOwnProperty(prototypeLangKey)&&(result=localeQueue[prototypeLangKey],
delete localeQueue[prototypeLangKey]),result}function registerNewTranslation(localeKey,extendTranslation,baseTranslationKey){var newTranslation=angular.merge({},translations[baseTranslationKey],extendTranslation);extendQueue.hasOwnProperty(localeKey)&&angular.forEach(extendQueue[localeKey],function(extendLang){angular.merge(newTranslation,extendLang)}),translations[localeKey]=newTranslation}function cleanupRemainingLocales(){var remainingLocaleKeys=Object.keys(localeQueue);if(0!==remainingLocaleKeys.length){var prototypeLangKey,reducedPrototypeKey=remainingLocaleKeys[0];do{if(prototypeLangKey=reducedPrototypeKey,reducedPrototypeKey=reduceLocaleKey(prototypeLangKey),reducedPrototypeKey.length===prototypeLangKey.length){processLocaleStack("en",0,remainingLocaleKeys[0]);break}if(translations.hasOwnProperty(reducedPrototypeKey)){processLocaleStack(reducedPrototypeKey,0,remainingLocaleKeys[0]);break}}while(reducedPrototypeKey.length<prototypeLangKey.length);cleanupRemainingLocales()}}function defineLocaleForTranslation(localeOrObj,optLocaleKey){var locale;if(angular.isDefined(localeOrObj)&&!angular.isObject(localeOrObj)&&angular.isString(localeOrObj)&&translations.hasOwnProperty(localeOrObj)&&(locale=localeOrObj),angular.isUndefined(locale))if(angular.isDefined(optLocaleKey)&&angular.isString(optLocaleKey)&&translations.hasOwnProperty(optLocaleKey))locale=optLocaleKey;else if(translations.hasOwnProperty(localeToUse))locale=localeToUse;else{for(var key=reduceLocaleKey(localeToUse),prevKey=localeToUse;key.length<prevKey.length;)translations.hasOwnProperty(key)?(locale=key,key=prevKey=""):(prevKey=key,key=reduceLocaleKey(key));angular.isUndefined(locale)&&(locale="en")}return locale}function extendLanguage(languageKey,extendedTranslationTable){extendQueue.hasOwnProperty(languageKey)||(extendQueue[languageKey]=[]),extendQueue[languageKey].push(extendedTranslationTable)}function extendDefaultTranslation(){extendQueue.hasOwnProperty("en")&&(angular.forEach(extendQueue.en,function(table){angular.merge(translations.en,table)}),delete extendQueue.en)}function serviceFactory(NamespaceService,$interpolate,$rootScope){return extendDefaultTranslation(),processLocaleStack("en",0),cleanupRemainingLocales(),{translate:function(translationKey,localeOrObj,optLocaleKey){var locale=defineLocaleForTranslation(localeOrObj,optLocaleKey),translateResult=NamespaceService.get(translations[locale],translationKey);return(null===translateResult||angular.isUndefined(translateResult))&&(translateResult=translationKey),angular.isObject(localeOrObj)?$interpolate(translateResult)(localeOrObj):translateResult},use:function(localeKey){return angular.isDefined(localeKey)&&(localeToUse=localeKey,$rootScope.$emit("cepTranslateChangeSuccess",{locale:localeToUse})),localeToUse},isConfigured:function(localeKey){return angular.isDefined(localeKey)&&translations.hasOwnProperty(localeKey)}}}this.registerLanguage=registerLanguage,this.extendLanguage=extendLanguage,this.$get=serviceFactory;var translations={en:{}},localeToUse="en",localeQueue={},extendQueue={}}function cepTranslateFilter(cepTranslate){function filter(translationKey,localeOrObj,optLocaleKey){return cepTranslate.translate(translationKey,localeOrObj,optLocaleKey)}return filter}function translateConfig($provide){$provide.decorator("$locale",function($delegate,cepTranslate){function rebindTranslations(locale){var transformedLocale={};return angular.forEach(locale,function(value,key){if("id"===key)Object.defineProperty(transformedLocale,"id",{get:function(){return cepTranslate.use()},set:function(){}});else if(angular.isDefined(reservedTranslations[key]))Object.defineProperty(transformedLocale,key,{get:function(){return cepTranslate.translate(reservedTranslations[key])},set:function(){}});else{var newValue=value;!angular.isArray(value)&&angular.isObject(value)&&(newValue=rebindTranslations(value)),transformedLocale[key]=newValue}}),transformedLocale}var reservedTranslations={SHORTDAY:"components.date.dayNames.short",DAY:"components.date.dayNames.long",SHORTMONTH:"components.date.monthNames.short",MONTH:"components.date.monthNames.long",AMPMS:"components.time.meridians"};return rebindTranslations($delegate)})}angular.module("reflexCepTranslate",["cepNamespaceModule"]).config(translateConfig).provider("cepTranslate",CepTranslateProvider).filter("cepTranslate",cepTranslateFilter)}(),function(){"use strict";var dependencies=["ngResource","ngSanitize","ngRoute","ngTouch","checklist-model","uuid4","ui.bootstrap","cepNamespaceModule","reflexCepTranslate","defaultGermanTranslation","smoothScroll","cepUiBootstrapDatepickerDecorated"];angular.module("reflexCepQuestionnaire",dependencies).config(["$rootScopeProvider",function($rootScopeProvider){$rootScopeProvider.digestTtl(20)}]).config(["$anchorScrollProvider",function($anchorScrollProvider){$anchorScrollProvider.disableAutoScrolling()}]).config(["$httpProvider",function($httpProvider){$httpProvider.defaults.withCredentials=!0,$httpProvider.defaults.headers.get||($httpProvider.defaults.headers.get={}),$httpProvider.defaults.headers.get["If-Modified-Since"]="Thu, 01 Jan 1970 01:00:00 GMT",$httpProvider.defaults.headers.get["Cache-Control"]="no-cache",$httpProvider.defaults.headers.get.Pragma="no-cache"}]).constant("Modernizr",window.Modernizr)}(),angular.module("reflexCepQuestionnaireApi",["reflexCepQuestionnaire"]).run(["LanguageSelectionService","$rootScope","$q",function(LanguageSelectionService,$rootScope,$q){"use strict";var API={};API.onNotification=function(listener){return $rootScope.$on("questionnaire:notification",function(event,args){listener(args)})},API.sync=function(successCallback,errorCallback){successCallback=successCallback||function(){},errorCallback=errorCallback||function(){},$rootScope.$apply(function(){var promises=[];$rootScope.$broadcast("questionnaire:sync",promises),$q.all(promises).then(successCallback,errorCallback)})},API.onAuthorizationRequired=function(listener){return $rootScope.$on("questionnaire:authorizationRequired",function(event,collector){var promiseWrappedListener=function(assessmentId){var deferred=$q.defer();return listener(assessmentId,deferred.resolve,deferred.reject),deferred.promise};collector.push(promiseWrappedListener)})},API.onRequestAssistance=function(listener){return $rootScope.$on("questionnaire:assistanceRequested",function(event,collector){var promiseWrappedListener=function(assessmentId){var deferred=$q.defer(),cancel=function(){deferred.resolve(!1)};return listener(assessmentId,deferred.resolve,cancel,deferred.reject),deferred.promise};collector.push(promiseWrappedListener)})},API.changeLanguage=function(languageKey,successCallback,errorCallback){successCallback=successCallback||function(){},errorCallback=errorCallback||function(){},$rootScope.$apply(function(){LanguageSelectionService.selectLanguage(languageKey).then(successCallback,errorCallback)})},window.cepApi=API;var event;angular.isFunction(Event)?event=new Event("cep:apiInitialized"):(event=document.createEvent("Event"),event.initEvent("cep:apiInitialized",!0,!0)),window.dispatchEvent(event)}]),function(){"use strict";angular.module("reflexCepAngularApp",["ngRoute","ngResource","reflexCepQuestionnaire","reflexCepQuestionnaireApi"]).config(function($routeProvider,reflexCepAngularAppConfig){$routeProvider.when(reflexCepAngularAppConfig.assessmentViewUrlPath+"/:assessmentId?/:groupId?",{templateUrl:reflexCepAngularAppConfig.assessmentViewPath,controller:"ApplicationController",reloadOnSearch:!1})})}(),angular.module("reflexCepTranslate").config(function(cepTranslateProvider){cepTranslateProvider.extendLanguage("en",{dir:"ltr",components:{"assessment-factor-search":{resultSingular:"result",resultPlural:"results",errors:{required:"Please fill out this field.",notLoaded:"The results could not be loaded."},hints:{noResults:"No matching results found.",inputTooShort:"Please enter at least {{minLetters}} letters.",isAlreadyInList:"(already selected)"}},autoSubmitButton:{texts:{button:"trigger assessment"}},assessmentFactorGroups:{texts:{addAnotherSearchTerm:"Add another search term","continue":"Continue","delete":"Delete"}},assistance:{request:"Request Assistance",transfer:"Hand over"},date:{errors:{required:"Please enter a date.",invalidDate:"Please enter a valid date. (Eg. {{format}})",dateMissing:"Please also enter a date."},formats:{year:"yyyy",month:"MMMM yyyy",day:"dd/MM/yyyy",hour:"dd/MM/yyyy HH:mm",minute:"dd/MM/yyyy HH:mm"},placeholder:{year:"YYYY",month:'eg. "January 1970"',day:"DD/MM/YYYY"},dayNames:{"long":["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],"short":["Sun","Mon","Tue","Wed","Thu","Fri","Sat"]},monthNames:{"long":["January","February","March","April","May","June","July","August","September","October","November","December"],"short":["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"]}},time:{timeFormat:"24h",meridians:["AM","PM"],fixedMinutesText:": 00",placeholder:{hour:"HH",minute:"mm"},errors:{time:"Please also enter a valid time."}},list:{errors:{invalid:"There is still at least one error in this list."},texts:{addRow:"Add new row"}},multiselection:{errors:{required:"Please select at least one element."}},number:{errors:{required:"Please enter a number.",precision:"Please enter a number with max. {{precision}} decimal places.",integer:"Please enter an integer.",invalidNumber:"Please enter a valid number.",outOfUpperBound:"Input has to be at most {{val}}.",outOfLowerBound:"Input has to be at least {{val}}."},formats:{separators:{decimal:".",group:","},groupSize:3,lgGroupSize:3},stonesPounds:{units:{stones:"st",pounds:"lbs"},formats:{stonesPounds:"{{stones}}st, {{pounds}}lbs",stones:"{{stones}}st",pounds:"{{pounds}}lbs"}},feetInches:{units:{feet:"ft",inches:"ins"},formats:{feetInches:"{{feet}}ft, {{inches}}ins",feet:"{{feet}}ft",inches:"{{inches}}ins"}},multipleUnits:{headlines:{}}},pagination:{errors:{pageValidationError:"There are still errors on this page.",pageValidationWarning:"There are still warnings on this page."},hints:{navigationBlockedTitle:"Navigation blocked!",navigationBlockedMessage:{stepwise:"You can only paginate stepwise. Please answer the pages in the correct order.",validity:"You can only navigate when there are no more validation errors on this page."}},texts:{previous:"previous",next:"next"}},pattern:{errors:{doesNotMatch:"Input does not match requirement ({{pattern}})."}},pdfLink:{texts:{policyDownload:"Policy details",policyDownloadDetails:"PDF"}},plainText:{noAnswer:"no Answer given"},popupBox:{texts:{close:"Close"}},questionAnnotation:{annotationMarker:"*",required:"required",optional:"optional"},questionReminder:{unansweredQuestionsAbove:"Don't forget to answer {{unansweredQuestionsAbove}} question(s) above.",invalidQuestionsAbove:"The are {{invalidQuestionsAbove}} validation errors in question(s) above.",unansweredAndInvalidQuestionsAbove:"There are {{unansweredQuestionsAbove}} unanswered and {{invalidQuestionsAbove}} invalid question(s) above.",minimize:"OK",focusFirstInvalidOrUnansweredQuestion:"Take me there"},singleselection:{errors:{required:"Please select an option."},hints:{placeholder:"Please select an element."},reset:"remove optional answer"},spinner:{requestTakesLongerThanUsual:"This request takes longer than usual..."},submitButton:{texts:{button:"Submit"}},struct:{errors:{invalid:"There is still at least one error in this struct."}},text:{errors:{required:"Please enter a text."}}},products:{validation:{error:"Product validation error",info:"Product validation information",warning:"Product validation warning"}}})}),angular.module("defaultGermanTranslation",["reflexCepTranslate"]).config(function(cepTranslateProvider){cepTranslateProvider.$get().isConfigured("de")||cepTranslateProvider.registerLanguage("de",{dir:"ltr",components:{"assessment-factor-search":{errors:{notLoaded:"Die Ergebnisse konnten nicht geladen werden.",required:"Bitte füllen Sie dieses Feld aus."},hints:{inputTooShort:"Bitte geben Sie mindestens {{minLetters}} Zeichen ein.",isAlreadyInList:"(bereits ausgewählt)",noResults:"Keine Ergebnisse gefunden."},resultPlural:"Ergebnisse",resultSingular:"Ergebnis"},assessmentFactorGroups:{texts:{addAnotherSearchTerm:"Weitere hinzufügen","continue":"Fortfahren"}},autoSubmitButton:{texts:{button:"Beurteilung durchführen"}},date:{dayNames:{"long":["Sonntag","Montag","Dienstag","Mittwoch","Donnerstag","Freitag","Samstag"],"short":["So.","Mo.","Di.","Mi.","Do.","Fr.","Sa."]},errors:{dateMissing:"Bitte geben Sie auch ein Datum ein.",invalidDate:"Bitte geben Sie ein gültiges Datum ein. Beispiel: {{format}}",required:"Bitte geben Sie ein Datum ein."},formats:{day:"dd.MM.yyyy",hour:"dd.MM.yyyy HH:mm",minute:"dd.MM.yyyy HH:mm",month:"MM.yyyy",year:"yyyy"},monthNames:{"long":["Januar","Februar","März","April","Mai","Juni","Juli","August","September","Oktober","November","Dezember"],"short":["Jan.","Feb.","März","Apr.","Mai","Juni","Juli","Aug.","Sep.","Okt.","Nov.","Dez."]},placeholder:{day:"TT.MM.JJJJ",month:"MM.JJJJ",year:"JJJJ"}},list:{errors:{invalid:"Diese Liste ist noch nicht korrekt."},texts:{addRow:"Neue Zeile"}},multiselection:{errors:{required:"Bitte wählen Sie mindestens ein Element aus."}},number:{errors:{integer:"Bitte geben Sie eine ganze Zahl ein.",invalidNumber:"Bitte geben Sie eine gültige Zahl ein.",outOfLowerBound:"Die Eingabe muss mindestens {{val}} betragen.",outOfUpperBound:"Die Eingabe darf nicht größer als {{val}} sein.",precision:"Die Eingabe darf nicht mehr als {{precision}} Nachkommastellen haben.",required:"Bitte geben Sie eine Zahl ein."},feetInches:{formats:{feet:"{{feet}} Fuß",feetInches:"{{feet}} Fuß, {{inches}} Zoll",inches:"{{inches}} Zoll"},units:{feet:"Fuß",inches:"Zoll"}},formats:{groupSize:3,lgGroupSize:3,separators:{decimal:",",group:"."}},multipleUnits:{headlines:"{}"},stonesPounds:{formats:{pounds:"{{pounds}} Pfund",stones:"{{stones}} Stone",stonesPounds:"{{stones}} Stone, {{pounds}} Pfund"},units:{pounds:"Pfund",stones:"Stone"}}},pagination:{errors:{pageValidationError:"Auf dieser Seite sind noch Fehler.",pageValidationWarning:"Auf dieser Seite sind noch Warnungen."},hints:{navigationBlockedMessage:{stepwise:"Die Seiten müssen schrittweise in der richtigen Reihenfolge beantwortet werden.",validity:"Bitte beheben Sie zunächst die Fehler auf dieser Seite bevor Sie fortfahren."},navigationBlockedTitle:"Navigation nicht möglich!"},texts:{next:"Weiter",previous:"Zurück"}},pattern:{errors:{doesNotMatch:"Die Eingabe entspricht nicht dem Muster: {{pattern}}."}},plainText:{noAnswer:"nicht beantwortet"},popupBox:{texts:{close:"Schließen"}},questionAnnotation:{annotationMarker:"*",optional:"Diese Frage ist freiwillig.",required:"Diese Frage muss beantwortet werden."},questionReminder:{invalidQuestionsAbove:"Es gibt {{invalidQuestionsAbove}} Validierungsfehler in weiter oben gestellten Fragen.",unansweredAndInvalidQuestionsAbove:"Es gibt weiter oben {{unansweredQuestionsAbove}} unbeantwortete und {{invalidQuestionsAbove}} invalide Fragen.",unansweredQuestionsAbove:"Bitte vergessen Sie nicht die Fragen {{unansweredQuestionsAbove}} weiter oben zu beantworten."},singleselection:{errors:{required:"Bitte wählen Sie eine Option."},hints:{placeholder:"Bitte wählen Sie ein Element aus."},reset:"Antwort zurücknehmen"},spinner:{requestTakesLongerThanUsual:"Anfrage läuft - bitte warten..."},struct:{errors:{invalid:"Diese Antwortgruppe ist noch nicht korrekt."}},submitButton:{texts:{button:"OK"}},text:{errors:{required:"Bitte geben Sie einen Text ein."}},time:{errors:{time:"Please also enter a valid time."},fixedMinutesText:": 00",meridians:["AM","PM"],placeholder:{hour:"HH",minute:"mm"},timeFormat:"24h"}},products:{validation:{error:"Produktvalidierungsfehler",info:"Produktvalidierungsinformation",warning:"Produktvalidierungswarnung"}}})}),function(){"use strict";function NamespaceService(){function extend(ns,nsString){var pl,i,parts=nsString.split("."),parent=ns;for(pl=parts.length,i=0;i<pl;i++)angular.isUndefined(parent[parts[i]])&&(parent[parts[i]]={}),parent=parent[parts[i]];return parent}function get(element,property){var pl,i,parts=property.split("."),parent=element;for(pl=parts.length,i=0;i<pl;i++){if(!parent[parts[i]])return parent[parts[i]];parent=parent[parts[i]]}return parent}function _delete(element,property){for(var pl,i,activeElement,propertyToDelete,parts=property.split("."),partsCount=parts.length;parts.length>0;){for(activeElement=element,pl=parts.length,i=0;i<pl-1&&activeElement[parts[i]];i++)activeElement=activeElement[parts[i]];propertyToDelete=parts[i],pl===partsCount?delete activeElement[propertyToDelete]:angular.isObject(activeElement[propertyToDelete])&&0===Object.getOwnPropertyNames(activeElement[propertyToDelete]).length&&delete activeElement[propertyToDelete],parts.pop()}}return{extend:extend,get:get,"delete":_delete}}angular.module("cepNamespaceModule",[]).service("NamespaceService",NamespaceService)}(),angular.module("reflexCepQuestionnaire").controller("ApplicationController",ApplicationController),angular.module("reflexCepQuestionnaire").directive("cepAssessmentFactorSearchAddRowButton",AssessmentFactorSearchAddRowButton),angular.module("reflexCepQuestionnaire").directive("cepAwesomeNumber",CepAwesomeNumber),angular.module("reflexCepQuestionnaire").directive("cepComponentBlurObserver",CepComponentBlurObserver),angular.module("reflexCepQuestionnaire").directive("cepCustomWidget",CepCustomWidget),angular.module("reflexCepQuestionnaire").directive("cepDateOutOfRange",CepDateOutOfRange),angular.module("reflexCepQuestionnaire").directive("cepDatePickerJs",CepDatePickerJs),angular.module("reflexCepQuestionnaire").directive("cepDatePickerNative",CepDatePickerNative),angular.module("reflexCepQuestionnaire").directive("cepDateTimePickerComponent",CepDateTimePickerComponent),angular.module("reflexCepQuestionnaire").directive("cepDateTimePickerFormField",CepDateTimePickerFormField),angular.module("reflexCepQuestionnaire").directive("cepDynamicHeadline",CepDynamicHeadline),angular.module("reflexCepQuestionnaire").directive("cepFormField",CepFormField),angular.module("reflexCepQuestionnaire").directive("cepInvalidDate",CepInvalidDate),angular.module("reflexCepQuestionnaire").directive("cepLabelFocusFix",CepLabelFocusFix),angular.module("reflexCepQuestionnaire").directive("cepNumberFormatter",CepNumberFormatter),angular.module("reflexCepQuestionnaire").directive("cepNumberOutOfRangeValidationMessage",CepNumberOutOfRangeValidationMessage),angular.module("reflexCepQuestionnaire").directive("cepNumberPrecisionValidator",CepNumberPrecisionValidator),angular.module("reflexCepQuestionnaire").directive("cepNumberWithMultipleUnits",CepNumberWithMultipleUnits),angular.module("reflexCepQuestionnaire").directive("cepOptionalString",cepOptionalString),angular.module("reflexCepQuestionnaire").directive("cepPattern",function(){"use strict";return{restrict:"A",require:"ngModel",link:function(scope,element,attrs,ngModel){if(attrs.cepPattern){var regExp;regExp=attrs.cepPattern.match(/^\/(.*)\/$/)?new RegExp("^"+attrs.cepPattern.substr(1,attrs.cepPattern.length-2)+"$","g"):new RegExp("^"+attrs.cepPattern+"$","g"),ngModel.$validators.pattern=function(modelValue,viewValue){var value=modelValue||viewValue,validateResult=null===value||""===value||regExp.test(value);return regExp.lastIndex=0,validateResult}}}}}),angular.module("reflexCepQuestionnaire").directive("cepPlainQuestion",CepPlainQuestion),angular.module("reflexCepQuestionnaire").directive("cepQuestionAssessmentFactorGroup",CepQuestionAssessmentFactorGroup),angular.module("reflexCepQuestionnaire").directive("cepQuestionCheckbox",CepQuestionCheckbox),angular.module("reflexCepQuestionnaire").directive("cepQuestionContainer",CepQuestionContainer),angular.module("reflexCepQuestionnaire").directive("cepQuestionKeyboardSupport",CepQuestionKeyboardSupport),angular.module("reflexCepQuestionnaire").directive("cepQuestionLabelAnnotation",CepQuestionLabelAnnotation),angular.module("reflexCepQuestionnaire").directive("cepQuestionList",CepQuestionList),function(){"use strict";function CepQuestionnaire(ApplicationDataService,HttpUnauthorizedInterceptorService,QuestionTreeService,NamespaceService,NotificationService,LocationService,$q,$qq,$timeout,ProductValidationService,FocusService,DiffpatchService,AutosaveService,questionnaireConfig,$rootScope,ServerSentEventService){function QuestionController($scope,element){function syncIfDirty(){return formIsDirty()?ApplicationDataService.sync($scope.assessmentId,$scope.application).then(setFormPristine):$q.when()}function roundtripTakesTooLong(roundtripTakesTooLongEnd){$scope.$emit("questionnaire:roundtrip:takesTooLong"),roundtripTakesTooLongEnd.then(function(){$scope.$emit("questionnaire:roundtrip:takesTooLongDone")})}function setupScope(){$scope.submit=submit,$scope.submitIfValid=submitIfValid,$scope.forceValidations=!1,$scope.forceAutoSubmit=!1,$scope.scheduleAutosubmit=function(){$timeout.cancel(scheduledAutosubmitTimeout),scheduledAutosubmit=!0,scheduledAutosubmitTimeout=$timeout(function(){$scope.processAutosubmit()},100)},$scope.processAutosubmit=function(){scheduledAutosubmit&&($timeout.cancel(scheduledAutosubmitTimeout),scheduledAutosubmit=!1,submit(!0))},$scope.$on("questionnaire:sync",function(event,promises){promises.push(sync($scope.assessmentId,$scope.application))}),$scope.$on("questionnaire:transferWriteAuthority",function(event,callback){scheduledAutosubmitTimeout&&$timeout.cancel(scheduledAutosubmitTimeout),sync($scope.assessmentId,$scope.application).then(function(){return ApplicationDataService.transferWriteAuthority($scope.assessmentId)}).then(applyState)["catch"](NotificationService.handleError("Could not transfer authority","Error"))["finally"](function(){callback()})}),$scope.$on("questionnaire:doAutoSubmit",function(event,callback,errorCallback){scheduledAutosubmitTimeout&&$timeout.cancel(scheduledAutosubmitTimeout),submit(!0).then(function(result){angular.isFunction(callback)&&callback(result)},function(error){return angular.isFunction(error)?void errorCallback(error):$q.reject(error)})}),$scope.$watchGroup(["forceReadonly","assessmentRole","application.meta.cep.activeRole","application.meta.cep.ui.requestedAssistance"],function(newValues){var newForceReadonly=newValues[0],newRole=newValues[1],newActiveRole=newValues[2];if($scope.forceAutoSubmit=newValues[3]===!0&&newActiveRole===$scope.assessmentRole,$scope.questionnaireReadonly=newForceReadonly===!0||newRole!==newActiveRole,newRole&&newActiveRole&&newRole!==newActiveRole){if(!EventSource){var optionalTokenParam=null!==$scope.observerAccessToken?"?access_token="+$scope.observerAccessToken:"",url=questionnaireConfig.api.urlPrefix+questionnaireConfig.api.assessmentService.assessmentPath+"/"+$scope.assessmentId+"/observe"+optionalTokenParam;EventSource=ServerSentEventService.newEventSource(url),EventSource.on("assessment",applyState)}}else EventSource&&(EventSource.off("assessment",applyState),EventSource.close(),EventSource=null)}),$scope.$on("$destroy",function(){EventSource&&(EventSource.off("assessment",applyState),EventSource.close(),EventSource=null),scheduledAutosubmitTimeout&&$timeout.cancel(scheduledAutosubmitTimeout)}),$scope.$watch("language",function(newLanguage,oldLanguage){newLanguage!==oldLanguage&&angular.isDefined($scope.application)&&$scope.application.language!==newLanguage&&submit(!0,newLanguage)["catch"](function(){$rootScope.setCepLanguage($scope.application.language)})}),$scope.$watch("paginationMode",function(){angular.isDefined($scope.application)&&(NamespaceService.extend($scope.application,"meta.cep.ui.paginationMode"),$scope.application.meta.cep.ui.paginationMode=$scope.paginationMode,"QuestionGroup"===$scope.paginationMode?(NamespaceService.extend($scope.application,"meta.cep.ui.groupId"),$scope.application.meta.cep.ui.groupId=$scope.currentPageId):NamespaceService["delete"]($scope.application,"meta.cep.ui.groupId"))}),$scope.$parent.paginationMode!==$scope.paginationMode&&($scope.$parent.paginationMode=$scope.paginationMode)}function awaitRenderingCompletes(v){var deferred=$q.defer();return $timeout(function(){deferred.resolve(v)}),deferred.promise}function adjustLanguage(applicationData){return $scope.language===applicationData.language||$scope.questionnaireReadonly?applicationData:assessApplicationData($scope.assessmentId,applicationData,!1,$scope.language).then(function(response){return response.applicationData})}function broadcastDoneMessage(arg){return $scope.$emit("questionnaire:doneInitializing"),arg}function formIsDirty(){return $scope.questionForm.$dirty}function applyState(applicationData){if(angular.isUndefined($scope.application))$scope.application=applicationData;else{var delta=diffpatcher.diff($scope.application,applicationData);diffpatcher.patch($scope.application,delta)}var paginationMode=NamespaceService.get($scope.application,"meta.cep.ui.paginationMode");return paginationMode&&($scope.paginationMode=paginationMode),applicationData}function navigateToNextPage(assessmentId,application){var callbackUrl=NamespaceService.get(application,"meta.cep.callbackUrl");return LocationService.setLocation(callbackUrl),$q.when("Changed location to meta.cep.callbackUrl navigateToNextPage")}function submit(isAutoSubmit,optLang){var retryableAssess=assessApplicationData.bind(null,$scope.assessmentId,$scope.application,isAutoSubmit,optLang),timeoutBoundAssessWithRetry=$qq.observeTimeout(function(cancelLoadPromise){return HttpUnauthorizedInterceptorService.retryIfUnauthorized($scope,$scope.assessmentId,retryableAssess.bind(null,cancelLoadPromise))},questionnaireConfig.backendTimeoutWarning,questionnaireConfig.backendTimeout,roundtripTakesTooLong);return $scope.$emit("questionnaire:roundtrip:start"),$scope.$broadcast("questionnaire:roundtrip:start"),$q.when().then(function(){scheduleAutosave()}).then(timeoutBoundAssessWithRetry).then(function(response){return isQuestionnaireDone(response)?navigateToNextPage($scope.assessmentId,$scope.application):$q.when(response).then(function(){return response.applicationData}).then(applyState)["finally"](awaitRenderingCompletes).then(setFormPristine).then(function(applicationData){return scheduleAutosave(),applicationData}).then(notifyProductValidations.bind(null,optLang))})["catch"](handleSaveError())["finally"](function(){$scope.$emit("questionnaire:roundtrip:done"),$scope.$broadcast("questionnaire:roundtrip:done")})}function submitIfValid(){return $scope.$broadcast("questionnaire:onbeforesubmit"),QuestionTreeService.forEachQuestion($scope.application.questionnaire.questions,function(question){QuestionTreeService.addMetaData(question,"hasBeenSubmitted",!0)}),$scope.questionForm.$valid?submit(!1):($scope.$broadcast("questionnaire:invalidQuestion"),FocusService.activateFirstInvalidQuestion(element[0]))}function sync(assessmentId,applicationData){return ApplicationDataService.sync(assessmentId,applicationData).then(scheduleAutosave)}function setFormPristine(args){return $scope.questionForm.$setPristine(),args}var EventSource,scheduledAutosubmitTimeout,scheduleAutosave=AutosaveService.registerAutosave($scope,syncIfDirty),handleLoadError=NotificationService.handleError("error.loadApplication.message","error.loadApplication.headline"),diffpatcher=DiffpatchService.create(),scheduledAutosubmit=!1;setupScope(),$scope.$emit("questionnaire:roundtrip:start"),$qq.observeTimeout(function(cancelLoadPromise){if(angular.isDefined($scope.application))return $q.when($scope.application);var retryableLoadApplicationData=loadApplicationData.bind(null,$scope.assessmentId,cancelLoadPromise,$rootScope.cepLanguage);return HttpUnauthorizedInterceptorService.retryIfUnauthorized($scope,$scope.assessmentId,retryableLoadApplicationData)},questionnaireConfig.backendTimeoutWarning,questionnaireConfig.backendTimeout,roundtripTakesTooLong)().then(adjustLanguage).then(applyState).then(notifyProductValidations.bind(null,void 0)).then(scheduleAutosave).then(broadcastDoneMessage)["catch"](handleLoadError)["finally"](awaitRenderingCompletes)["finally"](function(){$scope.$emit("questionnaire:roundtrip:done"),$scope.$broadcast("questionnaire:roundtrip:done")})}function loadApplicationData(assessmentId,cancelLoadPromise,optLang){return ApplicationDataService.loadApplicationData(assessmentId,cancelLoadPromise,optLang).then(function(applicationData){return QuestionTreeService.preProcessTree(applicationData),applicationData})}function assessApplicationData(assessmentId,applicationData,isAutoSubmit,optLang,cancelSubmitPromise){return QuestionTreeService.addAutoSubmitMetaData(applicationData,isAutoSubmit),ApplicationDataService.assess(assessmentId,applicationData,optLang,cancelSubmitPromise).then(function(response){return QuestionTreeService.preProcessTree(response.applicationData),response})}function notifyProductValidations(optLang,applicationData){var validationMessageLang=angular.isDefined(optLang)?optLang:applicationData.language;return ProductValidationService.notifyOnValidations(applicationData,validationMessageLang),applicationData}function isQuestionnaireDone(response){return 201===response.status}function handleSaveError(){return NotificationService.handleError("error.saveApplication.message","error.saveApplication.headline")}return{restrict:"E",transclude:{before:"?before",after:"?after"},templateUrl:"templates/questionnaire.html",replace:!0,scope:{application:"=?",assessmentId:"<",currentPageId:"=?",language:"<",paginationMode:"=",questionnaireReadonly:"<readonly",assessmentRole:"@",observerAccessToken:"@?"},link:QuestionController}}angular.module("reflexCepQuestionnaire").directive("cepQuestionnaire",CepQuestionnaire)}(),angular.module("reflexCepQuestionnaire").directive("cepQuestionnaireBlocker",CepQuestionnaireBlocker),angular.module("reflexCepQuestionnaire").directive("cepQuestionnaireCore",CepQuestionnaireCore),angular.module("reflexCepQuestionnaire").directive("cepQuestionStruct",CepQuestionStruct),angular.module("reflexCepQuestionnaire").directive("cepQuestionTemplate",CepQuestionTemplate),angular.module("reflexCepQuestionnaire").directive("cepRemoveOptionalAnswerBtn",CepRemoveOptionalAnswerBtn),angular.module("reflexCepQuestionnaire").directive("cepSearch",CepSearchDirective),angular.module("reflexCepQuestionnaire").directive("cepSingleCheckbox",CepSingleCheckbox),angular.module("reflexCepQuestionnaire").directive("cepSplitNumberWidget",CepSplitNumberWidget),angular.module("reflexCepQuestionnaire").directive("cepStandardUnitNumberInput",CepStandardUnitNumberInput),angular.module("reflexCepQuestionnaire").directive("cepTextArea",CepTextArea),angular.module("reflexCepQuestionnaire").directive("unicornSearch",SearchDirective),angular.module("reflexCepQuestionnaire").directive("cepBlockedPaginationAlert",CepBlockedPaginationAlert),angular.module("reflexCepQuestionnaire").directive("cepBreadcrumbPagination",CepBreadcrumbPagination),angular.module("reflexCepQuestionnaire").directive("cepFullPagination",CepFullPagination),angular.module("reflexCepQuestionnaire").directive("cepPagination",CepPagination),angular.module("reflexCepQuestionnaire").directive("cepPrevNextPagination",CepPrevNextPagination),angular.module("reflexCepQuestionnaire").directive("cepAutoSubmitButton",cepAutoSubmitButton),angular.module("reflexCepQuestionnaire").directive("cepPdfLink",cepPdfLink),angular.module("reflexCepQuestionnaire").directive("cepQuestionnaireLegend",CepQuestionnaireLegend),angular.module("reflexCepQuestionnaire").directive("cepQuestionReminder",CepQuestionReminder),angular.module("reflexCepQuestionnaire").directive("cepRequestAssistanceButton",CepRequestAssistanceButton),angular.module("reflexCepQuestionnaire").directive("cepSpinner",CepSpinner),angular.module("reflexCepQuestionnaire").directive("cepSubmitButton",cepSubmitButton),angular.module("reflexCepQuestionnaire").directive("cepTransferWriteAuthorityButton",cepTransferWriteAuthorityButton),angular.module("reflexCepQuestionnaire").filter("rasToLocaleDate",RasToLocaleDate),
angular.module("cepUiBootstrapDatepickerDecorated",["ui.bootstrap.datepickerPopup"]).config(function($provide){"use strict";$provide.decorator("uibDatepickerPopupDirective",function($delegate,$rootScope,uibDateParser){var directive=$delegate[0],link=directive.link;return directive.compile=function(){return function(scope,element,attrs,ctrls){link.apply(this,arguments);var ngModelCtrl=ctrls[0],datepickerCtrl=ctrls[1];if(datepickerCtrl){var unregisterChangeLanguageSucces=$rootScope.$on("cepTranslateChangeSuccess",function(){datepickerCtrl=datepickerCtrl;var date=scope.date?uibDateParser.filter(scope.date,attrs.uibDatepickerPopup):null;element.val(date),ngModelCtrl.$setViewValue(date)});scope.$on("$destroy",function(){unregisterChangeLanguageSucces()})}}},$delegate})}),angular.module("reflexCepQuestionnaire").service("ApplicationDataService",ApplicationDataService),angular.module("reflexCepQuestionnaire").service("AutosaveService",AutosaveService),angular.module("reflexCepQuestionnaire").service("DateConversionService",DateConversionService),angular.module("reflexCepQuestionnaire").service("DiffpatchService",DiffpatchService),angular.module("reflexCepQuestionnaire").service("FocusService",FocusService),function(){"use strict";function HttpUnauthorizedInterceptorService($q){function retryIfUnauthorized(scope,assessmentId,requiresAuthorization){return requiresAuthorization()["catch"](handleUnauthorized(scope,assessmentId,requiresAuthorization))}function handleUnauthorized(scope,assessmentId,retry){return function(error){if(401===error.status){var collector=[];if(scope.$emit("questionnaire:authorizationRequired",collector),0===collector.length)return $q.reject(error);var firstCollector=collector[0];return firstCollector(assessmentId).then(retry)}return $q.reject(error)}}return{retryIfUnauthorized:retryIfUnauthorized}}angular.module("reflexCepQuestionnaire").service("HttpUnauthorizedInterceptorService",HttpUnauthorizedInterceptorService)}(),angular.module("reflexCepQuestionnaire").service("LanguageSelectionService",LanguageSelectionService),function(){"use strict";function LocationService($window,$timeout){function setLocation(url,onBeforeSetHash){var urlObj=hashOrHref(url,$window.location);urlObj.href?$timeout(function(){$window.location.href=urlObj.href},0,!1):urlObj.hash&&(onBeforeSetHash&&onBeforeSetHash(urlObj.hash),$timeout(function(){$window.location.hash=urlObj.hash},0,!1))}function hashOrHref(url,currentLocation){var urlParser=$window.document.createElement("a");return urlParser.href=url,0===url.indexOf("#")?{hash:url.substring(1)}:currentLocation.origin===urlParser.origin&&currentLocation.pathname===urlParser.pathname?""===urlParser.hash?{hash:""}:{hash:urlParser.hash.substring(1)}:{href:urlParser.href}}return{setLocation:setLocation,_hashOrHref:hashOrHref}}angular.module("reflexCepQuestionnaire").service("LocationService",LocationService)}(),angular.module("reflexCepQuestionnaire").service("NotificationService",NotificationService),angular.module("reflexCepQuestionnaire").service("PaginationService",PaginationService),angular.module("reflexCepQuestionnaire").service("ProductValidationService",ProductValidationService),angular.module("reflexCepQuestionnaire").service("$qq",function($q,$timeout){"use strict";function observeTimeout(promiseFactory,softTimeout,hardTimeout,onSoftTimeoutReached){return function(){var actionCancellation=$q.defer(),softTimeoutCancellation=$q.defer(),actionPromise=promiseFactory(actionCancellation.promise),softTimeoutPromise=timeout(softTimeout),hardTimeoutPromise=timeout(hardTimeout);return race({action:actionPromise,softTimeout:softTimeoutPromise}).then(function(raceResult){return angular.isDefined(raceResult.action)?raceResult.action:(onSoftTimeoutReached(softTimeoutCancellation.promise),race({action:actionPromise,hardTimeout:hardTimeoutPromise})["finally"](function(){softTimeoutCancellation.resolve()}).then(function(raceResult){return angular.isDefined(raceResult.action)?raceResult.action:(actionCancellation.resolve(),actionPromise)},function(rejectedRaceResult){return $q.reject(rejectedRaceResult.action)}))},function(rejectedRaceResult){return $q.reject(rejectedRaceResult.action)})}}function race(promises){var deferred=$q.defer();return angular.forEach(promises,function(promise,key){promise.then(function(value){if(angular.isArray(promises)){var arrayResult=Array.apply(null,new Array(promises.length)).map(function(_,i){if(i===key)return value});deferred.resolve(arrayResult)}else{var objectResult={};objectResult[key]=value,deferred.resolve(objectResult)}},function(rejection){if(angular.isArray(promises)){var arrayResult=Array.apply(null,new Array(promises.length)).map(function(_,i){if(i===key)return rejection});deferred.reject(arrayResult)}else{var objectResult={};objectResult[key]=rejection,deferred.reject(objectResult)}})}),deferred.promise}function timeout(millis,value){return $timeout(function(){return value},millis,!1)}function never(){return $q.defer().promise}function retryTimes(promiseFactory,n,shouldRetry){return shouldRetry||(shouldRetry=function(){return!0}),n>0?promiseFactory()["catch"](function(e){return shouldRetry(e)?retryTimes(promiseFactory,n-1,shouldRetry):$q.reject(e)}):promiseFactory()}function retryOnce(promiseFactory,shouldRetry){return retryTimes(promiseFactory,1,shouldRetry)}return{retryTimes:retryTimes,retryOnce:retryOnce,timeout:timeout,race:race,never:never,observeTimeout:observeTimeout}}),angular.module("reflexCepQuestionnaire").service("QuestionTreeService",QuestionTreeService),function(){"use strict";function ReflexiveOnEvaluationService(){function asArray(v){return null===v||angular.isUndefined(v)?[]:angular.isArray(v)?v:[v]}function difference(a,b){return a.filter(function(av){return b.indexOf(av)===-1})}function symmetricDifference(a,b){return difference(a,b).concat(difference(b,a))}function determineSelectionAutoSubmit(reflexiveOn,oldValue,newValue){if(angular.equals(oldValue,newValue))return!1;var toId=function(a){return a.id},removedAndAddedAnswers=symmetricDifference(asArray(oldValue).map(toId),asArray(newValue).map(toId));return haveIntersections(removedAndAddedAnswers,reflexiveOn)}function haveIntersections(arr1,arr2){return arr1.some(function(e1){return arr2.indexOf(e1)!==-1})}return{determineSelectionAutoSubmit:determineSelectionAutoSubmit}}angular.module("reflexCepQuestionnaire").service("ReflexiveOnEvaluationService",ReflexiveOnEvaluationService)}(),angular.module("reflexCepQuestionnaire").service("RenderHintService",RenderHintService),function(){"use strict";function RequestAssistanceInterceptorService($q){function requestAssistanceAndResolveContext(scope,assessmentId){var collector=[];return scope.$emit("questionnaire:assistanceRequested",collector),0===collector.length?$q.when({}):collector[0](assessmentId)}return{requestAssistanceAndResolveContext:requestAssistanceAndResolveContext}}angular.module("reflexCepQuestionnaire").service("RequestAssistanceInterceptorService",RequestAssistanceInterceptorService)}(),angular.module("reflexCepQuestionnaire").service("ScrollToService",ScrollToService),angular.module("reflexCepQuestionnaire").service("SearchService",SearchService),angular.module("reflexCepQuestionnaire").service("ServerSentEventService",ServerSentEventService),angular.module("reflexCepQuestionnaire").service("SplitNumberCalculator",SplitNumberCalculator),angular.module("reflexCepQuestionnaire").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("templates/auto-submit-button.html",'<button id="autoSubmitButton" class="btn btn-default cep-qa_questionnaire_auto-submit-btn" ng-click="triggerAutoSubmit()"><i class="glyphicon glyphicon-refresh" ng-class="{\n\t\t\'glyphicon-spin\': autoSubmitInProgress,\n\t\t\'glyphicon-refresh\': !autoSubmitOK,\n\t\t\'glyphicon-ok\': autoSubmitOK\n\t}"></i> {{ "components.autoSubmitButton.texts.button" | cepTranslate:language }}</button>'),$templateCache.put("templates/form_fields/checkbox.html",'<ul class="list-checkbox" cep-question-checkbox cep-question-keyboard-support cep-component-blur-observer ng-keypress="onKeyPress($event)"><li ng-repeat="option in question.options" class="checkbox" ng-class="{disabled: questionnaireReadonly}"><label cep-label-focus-fix><input id="{{ getFormFieldId() }}_{{option.id}}" name="{{ getFormFieldId() }}" type="checkbox" value="{{ option }}" checklist-model="question.answer" checklist-value="option" ng-required="required()" ng-disabled="questionnaireReadonly  || disabledByExclusiveConstraint(option)" checklist-change="onInputDone()" ng-focus="onInputStart(true)" formnovalidate="formnovalidate"> <span class="key" ng-if="showCheckboxKey">{{ $index + 1 }}</span> <span ng-bind="option.label" class="label-input kb-text" title="{{ option.label }}"></span><div ng-if="option.hint" class="hint kb-text">{{ option.hint }}</div></label></li></ul>'),$templateCache.put("templates/form_fields/components/assessment-factor-search-add-row-button.html",'<div class="list-control" ng-if="!questionnaireReadonly"><button class="btn btn-default focussable cep-qa_questionnaire_list_add-row-btn_{{ getFormFieldId() }}" ng-disabled="!question.nextUnusedFactor " type="button" ng-click="addAssessmentFactor()">{{ \'components.list.texts.addRow\' | cepTranslate:language }}</button></div>'),$templateCache.put("templates/form_fields/components/cep-awesome-number.html",'<input id="{{ formFieldId }}" name="{{ formFieldId }}" type="text" class="form-control short-input" formnovalidate="formnovalidate" cep-number-formatter ng-focus="enterField()" ng-blur="leaveField()" placeholder="{{question.infoText}}" ng-disabled="questionnaireReadonly ">'),$templateCache.put("templates/form_fields/components/date-time-picker-component.html",'<div class="date-time-picker-component" ng-form="nestedForm"><div class="short-input"><div class="input-group"><input uib-datepicker-popup="{{dateFormat}}" name="date" type="text" class="form-control" datepicker-options="datepickerOptions" ng-model="answer.date" is-open="datePopup.open" placeholder="{{datePlaceholder}}" show-weeks="false" show-button-bar="false" ng-disabled="isDisabled " formnovalidate="formnovalidate"> <span class="input-group-btn"><button type="button" class="btn btn-default calender-btn cep-qa_questionnaire_calender-btn_{{getFormFieldId()}}" ng-click="datePopup.open = true" ng-disabled="isDisabled "><i class="glyphicon glyphicon-calendar"></i></button></span></div></div><div class="short-input"><div class="input-group"><span class="form-control timepicker"><div uib-timepicker ng-model="answer.time" name="time" show-meridian="timeFormat === \'12h\'" pad-hours="timeFormat !== \'12h\'" mousewheel="false" show-spinners="false" ng-disabled="isDisabled " template-url="templates/uib-custom-timepicker.html"></div></span><span class="input-group-addon"><i class="glyphicon glyphicon-time"></i></span></div></div></div>'),$templateCache.put("templates/form_fields/components/standard-unit-number-input.html",'<div class="short-input"><div class="input-group" ng-form="nestedForm"><input type="number" name="nestedInput" class="form-control" formnovalidate="formnovalidate" lang="{{ language }}" ng-model="input" ng-disabled="isDisabled "> <span class="input-group-addon" blurs-component>{{ unit.label }}</span></div></div>'),$templateCache.put("templates/form_fields/components/unicornsearch.html","<div class=\"unicorn-search\" ng-class=\"{\n      'input-group': config.showClearBtn && !searchDisabled,\n      'unicorn-search--disabled': searchDisabled ,\n\t  'unicorn-search--max-reached': state.maximumReached,\n      'unicorn-search--active': state.focused || (state.open && results.length > 0)\n"+'    }"><div class="unicorn-search__inner form-control" ng-mouseup="activateSearchField()" ng-class="{\'unicorn-search__inner--focused\': state.focused,\n                   \'unicorn-search__inner--open\': (state.open && results.length > 0) }"><span ng-repeat="chip in selectedItems" class="unicorn-chip">{{itemToString(chip)}} <button type="button" ng-click="removeItem(chip)" tabindex="-1" ng-if="!searchDisabled">&times;</button></span><div class="unicorn-search__input" ng-hide="searchDisabled "><i class="unicorn-search__icon glyphicon" ng-class="{\n            \'glyphicon-refresh glyphicon-spin\': state.loading,\n            \'glyphicon-search\': !state.loading  && !state.loadingError,\n            \'glyphicon-exclamation-sign\': !state.loading && state.loadingError\n          }"></i> <input tabindex="0" type="text" class="unicorn-search__focusable" placeholder="{{inputPlaceholder}}" ng-model="search" ng-keydown="handleKeyboardInput($event)" ng-focus="requestTouched();openResults();state.focused=true" ng-blur="state.focused=false"></div><div class="unicorn-suggestions"><ul ng-if="state.open && results.length > 0"><li class="unicorn-suggestions__headline"><strong>{{results.length}} {{results.length > 1 ? translations.resultPlural || \'results\' : translations.resultSingular || \'result\'}}</strong></li><li ng-repeat="result in results" class="unicorn-suggestions__result"><button type="button" class="unicorn-search__focusable" ng-click="selectItem(result)" ng-if="!isAlreadySelected(result)" tabindex="0" ng-keydown="handleKeyboardInput($event)" ng-mouseover="focusResult($event)" ng-focus="focussedResult=result" ng-blur="focussedResult=undefined" ng-class="{\'active\': (state.focused && getFirstSelectableItemFromResults() === result) || focussedResult === result}">{{itemToString(result)}}</button> <span class="unicorn-suggestions__result--already-selected" ng-if="isAlreadySelected(result)">{{itemToString(result)}} {{translations.alreadySelected || \'is already selected\'}}</span></li></ul></div></div><span class="input-group-btn" ng-if="config.showClearBtn && !searchDisabled"><button type="button" class="btn btn-danger unicorn-search__btn-append" ng-click="clear()"><i class="glyphicon glyphicon-trash"></i></button></span></div><span class="help-block unicorn-hints" ng-if="state.nothingFound || state.tooLessLetters || state.loadingError"><span ng-if="state.nothingFound" class="unicorn-hints__hint text-warning">{{translations.nothingFound || \'Nothing found.\'}}</span> <span ng-if="state.tooLessLetters" class="unicorn-hints__hint text-muted">{{translations.tooLessChars || \'Search term too short.\'}}</span> <span ng-if="state.loadingError" class="unicorn-hints__hint text-danger">{{translations.errorFetchingResults || \'Could not fetch results.\'}}</span></span>'),$templateCache.put("templates/form_fields/custom-widget.html",'<input type="hidden" ng-model="question.answer" name="{{questionFormFieldId}}" ng-required="{{question.constraints.required}}" id="{{questionFormFieldId}}"><div class="cep-custom-widget"></div>'),$templateCache.put("templates/form_fields/date-picker-js.html",'<!-- DATE INPUT FOR DESKTOPS --><div class="short-input"><div class="input-group with-datepicker" cep-component-blur-observer after-action="onInputDone"><input cep-date-picker-js uib-datepicker-popup="{{getCurrentLocaleFormat()}}" type="text" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" class="form-control" datepicker-options="uibDatePickerOptions" ng-model="question.answer" is-open="status.opened" placeholder="{{question.infoText || getCurrentLocaleFormatTranslation()}}" show-weeks="false" show-button-bar="false" ng-blur="status.focused = false;" ng-focus="status.focused = true;onInputStart(true)" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate"> <span class="input-group-btn"><button type="button" class="btn btn-default calender-btn cep-qa_questionnaire_calender-btn_{{getFormFieldId()}}" ng-click="status.opened = true" ng-disabled="questionnaireReadonly "><i class="glyphicon glyphicon-calendar"></i></button></span></div></div>'),$templateCache.put("templates/form_fields/date-picker-native.html",'<!--\n\tDATE INPUT FOR TOUCH DEVICES\n\tWarning: iOS Safari does not support min/max/step attributes!\n\tDev Info: We have to use 3 ng-ifs because you can\'t set the\n\ttype dynamically (http://stackoverflow.com/a/14954923)\n--> <input ng-if="question.precision === \'day\'" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" class="form-control short-input" type="date" cep-date-picker-native ng-attr-min="{{question.constraints.minValue}}" ng-attr-max="{{question.constraints.maxValue}}" ng-model="question.answer" ng-blur="onInputDone()" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate"> <input ng-if="question.precision === \'month\'" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" class="form-control short-input" type="month" cep-date-picker-native ng-attr-min="{{question.constraints.minValue}}" ng-attr-max="{{question.constraints.maxValue}}" ng-model="question.answer" ng-blur="onInputDone()" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate"> <input ng-if="question.precision === \'year\'" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" class="form-control short-input" type="number" ng-min="{{question.constraints.minValue}}" ng-max="{{question.constraints.maxValue}}" ng-model="question.answer" ng-blur="onInputDone()" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate">'),$templateCache.put("templates/form_fields/date-time-picker-form-field.html",'<div cep-date-time-picker-form-field cep-component-blur-observer blurs-component after-action="onInputDone"><cep-date-time-picker-component id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" ng-model="question.answer" model-format="{{ modelFormat }}" fixed-minutes="question.precision === \'hour\'" fixed-minutes-text="\'components.time.fixedMinutesText\' | cepTranslate:language" min="question.constraints.minValue" max="question.constraints.maxValue" date-placeholder="question.infoText || (\'components.date.placeholder.day\' | cepTranslate:language)" date-format="\'components.date.formats.day\' | cepTranslate:language" hour-placeholder="\'components.time.placeholder.hour\' | cepTranslate:language" minute-placeholder="\'components.time.placeholder.minute\' | cepTranslate:language" is-disabled="questionnaireReadonly " time-format="\'components.time.timeFormat\' | cepTranslate:language" ng-required="question.constraints.required"></cep-date-time-picker-component></div>'),$templateCache.put("templates/form_fields/dropdown.html",'<select ng-model="question.answer" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" ng-options="option.label for option in question.options track by option.id" ng-required="question.constraints.required" ng-change="onInputDone()" class="form-control short-input" ng-disabled="questionnaireReadonly " title="{{ question.hint }}" formnovalidate="formnovalidate"><option value="" class="kb-text" ng-disabled="true">{{ question.infoText || \'components.singleselection.hints.placeholder\' | cepTranslate:language }}</option></select><cep-remove-optional-answer-btn></cep-remove-optional-answer-btn>'),$templateCache.put("templates/form_fields/monetary-amount.html",'<cep-awesome-number form-field-id="getFormFieldId()" lg-group-size="\'components.number.formats.lgGroupSize\' | cepTranslate:language" group-size="\'components.number.formats.groupSize\' | cepTranslate:language" separators="\'components.number.formats.separators\' | cepTranslate:language" max-precision="question.precision" min-precision="question.precision" question="question" question-form="questionForm" on-input-done="onInputDone" is-disabled="questionnaireReadonly " ng-model="question.answer" ng-form="cepAwesomeForm" ng-required="question.constraints.required" placeholder="{{question.infoText}}" cep-number-precision-validator="{{question.precision}}"></cep-awesome-number>'),$templateCache.put("templates/form_fields/not-supported.html",'<input id="q_{{question.id}}_{{question.meta.cep.ui.id}}_input" name="q_{{question.id}}_{{question.meta.cep.ui.id}}_input" placeholder="Input not supported here" type="text" class="form-control" ng-model="question.answer" ng-required="question.constraints.required" disabled="disabled">'),$templateCache.put("templates/form_fields/number-with-multiple-units.html",'<div class="number-with-multiple-units" cep-component-blur-observer after-action="onInputDone"><input type="hidden" ng-model="question.answer" name="{{questionFormFieldId}}" ng-required="{{question.constraints.required}}" cep-number-precision-validator="{{ question.precision }}" id="{{questionFormFieldId}}"><!-- only one unit --><div ng-if="question.availableUnits.length === 1"><!-- ft/ins --><div ng-if="(renderHints.units[question.defaultUnit.id].type === \'ft/ins\')"><cep-split-number-widget question="question" question-model="modelController" language="language" is-disabled="questionnaireReadonly " show-validations="question.meta.cep.ui.hasBeenSubmitted || modelController.$touched" first-input-translation-key="components.number.feetInches.units.feet" second-input-translation-key="components.number.feetInches.units.inches" multiplicator="12"></cep-split-number-widget></div><!-- st/lbs --><div ng-if="(renderHints.units[question.defaultUnit.id].type === \'st/lbs\')"><cep-split-number-widget question="question" question-model="modelController" language="language" is-disabled="questionnaireReadonly " show-validations="question.meta.cep.ui.hasBeenSubmitted || modelController.$touched" first-input-translation-key="components.number.stonesPounds.units.stones" second-input-translation-key="components.number.stonesPounds.units.pounds" multiplicator="14"></cep-split-number-widget></div><!-- normal input --><div ng-if="([\'st/lbs\', \'ft/ins\'].indexOf(renderHints.units[question.defaultUnit.id].type) === -1)"><div ng-form="nestedForm"><cep-standard-unit-number-input question="question" question-model="modelController" unit="question.defaultUnit" placeholder="{{question.infoText}}" is-disabled="questionnaireReadonly "></cep-standard-unit-number-input></div></div></div><!-- more than one unit --><div cep-number-with-multiple-units ng-if="question.availableUnits.length > 1"><uib-tabset active="activeTab"><uib-tab index="$index" ng-repeat="unit in question.availableUnits" disable="questionnaireReadonly " select="chooseUnit(unit, $event)"><uib-tab-heading>{{ getHeadlineForUnit(unit) }}</uib-tab-heading><div class="small text-muted unit-help-text" ng-if="unit.helpText">{{unit.helpText}}</div><!-- ft/ins --><div ng-if="renderHints.units[unit.id].type === \'ft/ins\' && activeTab === $index"><cep-split-number-widget question="question" question-model="modelController" language="language" is-disabled="questionnaireReadonly " show-validations="question.meta.cep.ui.hasBeenSubmitted || modelController.$touched" first-input-translation-key="components.number.feetInches.units.feet" second-input-translation-key="components.number.feetInches.units.inches" multiplicator="12"></cep-split-number-widget></div><!-- st/lbs --><div ng-if="renderHints.units[unit.id].type === \'st/lbs\' && activeTab === $index"><cep-split-number-widget question="question" question-model="modelController" is-disabled="questionnaireReadonly " show-validations="question.meta.cep.ui.hasBeenSubmitted || modelController.$touched" first-input-translation-key="components.number.stonesPounds.units.stones" second-input-translation-key="components.number.stonesPounds.units.pounds" multiplicator="14"></cep-split-number-widget></div><!-- normal input --><div ng-if="[\'st/lbs\', \'ft/ins\'].indexOf(renderHints.units[unit.id].type) === -1 && activeTab === $index"><cep-standard-unit-number-input question="question" question-model="modelController" unit="unit" placeholder="{{question.infoText}}" is-disabled="questionnaireReadonly "></cep-standard-unit-number-input></div></uib-tab></uib-tabset></div></div>'),$templateCache.put("templates/form_fields/number.html",'<input id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" type="number" class="form-control short-input" formnovalidate="formnovalidate" lang="{{language}}" placeholder="{{question.infoText}}" ng-model="question.answer" ng-focus="onInputStart()" ng-blur="onInputDone()" ng-min="{{question.constraints.minValue}}" ng-max="{{question.constraints.maxValue}}" ng-disabled="questionnaireReadonly " ng-required="{{question.constraints.required}}" cep-number-precision-validator="{{question.precision}}">'),$templateCache.put("templates/form_fields/plain-text.html",'<span ng-if="question.type === \'text\' || (question.type === \'number\' && !question.availableUnits)" class="plain-single-answer">{{ question.answer }} </span><span ng-if="question.type === \'date\'" class="plain-single-answer"><span ng-if="question.answer">{{ question.answer | rasToLocaleDate }}</span> </span><span ng-if="question.type === \'number\' && question.availableUnits" class="plain-single-answer">{{ question.answer }} {{ getUnitLabel() }} </span><span ng-if="question.type === \'singleselection\'" class="plain-single-answer">{{ getSingleSelectionAnswerLabel() }} </span><span ng-if="question.type === \'multiselection\' || question.type === \'assessment-factor-search\'" class="plain-multi-answer"><ul ng-class="{\'list-unstyled\': question.answer.length === 1}"><li ng-repeat="answer in question.answer">{{answer.label}}</li></ul></span><span ng-if="question.type === \'struct\'" class="plain-struct"><ul><li ng-repeat="question in question.elements"><ng-include src="\'templates/question_templates/question-plain.html\'"></li></ul></span><span ng-if="question.type === \'list\'" class="plain-list"><ol ng-class="{\'list-unstyled\': question.answer.length === 1}"><li ng-repeat="question in question.answer"><ng-include src="\'templates/form_fields/plain-text.html\'"></li></ol></span>'),$templateCache.put("templates/form_fields/radio.html",'<ul cep-question-keyboard-support cep-component-blur-observer blurs-component ng-keypress="onKeyPress($event)" class="list-radio" ng-class="{\'boolean\': question.options.length == 2}"><li ng-repeat="option in question.options track by option.id" class="radio" sets-touched ng-class="{disabled: questionnaireReadonly}"><label cep-label-focus-fix><input id="{{ getFormFieldId() }}_{{option.id}}" name="{{ getFormFieldId() }}" type="radio" ng-required="question.constraints.required" ng-model="question.answer.id" ng-value="option.id" ng-disabled="questionnaireReadonly " ng-change="onInputDone()" ng-mousedown="onInputStart(true)" formnovalidate="formnovalidate"> <span class="key" ng-if="showCheckboxKey">{{ $index + 1 }}</span> <span class="label-input kb-text">{{option.label}}</span><div ng-if="option.hint" class="hint kb-text">{{ option.hint }}</div></label></li></ul><cep-remove-optional-answer-btn></cep-remove-optional-answer-btn>'),$templateCache.put("templates/form_fields/search.html",'<div class="type-search form-group" ng-class="{ \'single-search short-input\' : (renderHints.type === \'single-answer\') }" id="q_{{question.id}}" cep-search><cep-assessment-factor-search-add-row-button ng-model="question.answer" name="{{ getFormFieldId() }}" id="{{ getFormFieldId() }}" question="question" ng-required="question.constraints.required" questionnaire-readonly="questionnaireReadonly " ng-if="question.exposesNextUnusedFactor"></cep-assessment-factor-search-add-row-button><unicorn-search cep-component-blur-observer ng-model="question.answer" name="{{ getFormFieldId() }}" id="{{ getFormFieldId() }}" load="load" item-to-key="itemToKey" item-to-string="itemToString" config="config" search-disabled="questionnaireReadonly " input-placeholder="question.infoText" translations="translations" ng-required="question.constraints.required" question-id="question.id" ng-if="!question.exposesNextUnusedFactor"></unicorn-search></div>'),$templateCache.put("templates/form_fields/select-multi.html",'<div class="type-multiselect" ng-class="{ \'has-error\': questionIsInvalid() }"><select multiple="multiple" size="5" id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" title="{{question.hint}}" class="form-control short-input" ng-options="option.label for option in question.options track by option.id" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " ng-model="question.answer" ng-blur="onInputDone()" formnovalidate="formnovalidate"></select></div>'),$templateCache.put("templates/form_fields/single-checkbox.html",'<div class="checkbox" ng-class="{disabled: questionnaireReadonly}" cep-single-checkbox><label cep-label-focus-fix><input id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" type="checkbox" ng-model="checked" ng-required="required()" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate"> <span class="key">1</span></label></div>'),$templateCache.put("templates/form_fields/split-number-widget.html",'<div class="special-number-widget" ng-class="{\'ng-invalid\': modelController.$invalid}" cep-component-blur-observer after-action="fillWithZeros"><div ng-form="nestedForm"><div class="short-input"><div class="input-group first-input-wrapper"><input class="form-control" name="firstValue" ng-model="firstValue" type="number" precision="0" step="1" min="0" ng-disabled="isDisabled " ng-focus="focusInput()" ng-blur="scheduleBlurInput()" cep-number-precision-validator="0"> <span class="input-group-addon" blurs-component>{{ firstInputTranslationKey | cepTranslate:language }}</span></div><div class="nested-validations" ng-if="nestedForm.firstValue.$invalid && showValidations"><div class="validation alert alert-danger"><p ng-if="nestedForm.firstValue.$error.min" cep-number-out-of-range-validation-message min="0" error="nestedForm.firstValue.$error"></p><p ng-if="nestedForm.firstValue.$error.number">{{ \'components.number.errors.invalidNumber\' | cepTranslate:language }}</p><p ng-if="nestedForm.firstValue.$error.numberPrecision">{{ \'components.number.errors.integer\' | cepTranslate:language }}</p></div></div></div><div class="short-input"><div class="input-group"><input class="form-control" name="secondValue" ng-model="secondValue" type="number" step="1" precision="0" min="0" placeholder="{{question.infoText}}" ng-disabled="isDisabled " ng-focus="focusInput()" ng-blur="scheduleBlurInput()" ng-max="multiplicator - 1" cep-number-precision-validator="0"> <span class="input-group-addon" blurs-component>{{ secondInputTranslationKey | cepTranslate:language }}</span></div><div class="nested-validations" ng-if="nestedForm.secondValue.$invalid && showValidations"><div class="validation alert alert-danger"><p ng-if="nestedForm.secondValue.$error.min || nestedForm.secondValue.$error.max" cep-number-out-of-range-validation-message min="0" max="multiplicator - 1" error="nestedForm.secondValue.$error" special-type="renderHints.type"></p><p ng-if="nestedForm.secondValue.$error.number">{{ \'components.number.errors.invalidNumber\' | cepTranslate:language }}</p><p ng-if="nestedForm.secondValue.$error.numberPrecision">{{ \'components.number.errors.integer\' | cepTranslate:language }}</p></div></div></div></div></div>'),$templateCache.put("templates/form_fields/text-area.html",'<!-- don\'t use attribute placeholder! -> https://github.com/angular/angular.js/issues/5025 --> <textarea cep-text-area id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" rows="{{ multiLineTextLines }}" class="form-control" ng-attr-placeholder="{{ question.infoText }}" ng-focus="onInputStart()" ng-blur="onInputDone()" ng-model="question.answer" ng-required="question.constraints.required" ng-disabled="questionnaireReadonly " formnovalidate="formnovalidate">\n</textarea>'),$templateCache.put("templates/form_fields/text.html",'<input id="{{ getFormFieldId() }}" name="{{ getFormFieldId() }}" type="text" class="form-control short-input" ng-model="question.answer" ng-focus="onInputStart()" ng-blur="onInputDone()" ng-required="question.constraints.required" cep-optional-string="{{ !question.constraints.required }}" cep-pattern="{{ question.constraints.pattern }}" ng-disabled="questionnaireReadonly " placeholder="{{question.infoText}}" formnovalidate="formnovalidate">'),
$templateCache.put("templates/pagination/pagination-blocked-alert.html",'<div ng-if="!alertDismissed && paginationBlockedReason" class="alert alert-warning alert-sticky pagination-blocked-alert" role="alert"><button type="button" class="close cep-qa_questionnaire_pagination_close-navigation-alert-btn" aria-label="Close" ng-click="dismissAlert()"><span aria-hidden="true">&times;</span></button> <strong>{{\'components.pagination.hints.navigationBlockedTitle\' | cepTranslate:language}}</strong> {{\'components.pagination.hints.navigationBlockedMessage.\' + paginationBlockedReason | cepTranslate:language}}</div>'),$templateCache.put("templates/pagination/pagination-breadcrumb.html",'<ol class="breadcrumb" ng-if="paginationMode && paginationMode !== \'Questionnaire\'"><li ng-repeat="page in pages" ng-class="{\n\t\t\t\t\tactive: isCurrentPage(page)\n\t\t\t\t}"><a href class="cep-qa_questionnaire_breadcrumb-pagination_page-{{page.index + 1}}-link" ng-if="!isCurrentPage(page)" ng-click="goToPage(page)" ng-attr-data-hint="{{getPageValidationAnnotation(page)}}" ng-class="{\n\t\t    \'hint--top hint--rounded\': getPageValidationAnnotation(page)\n\t\t   }">{{getPageCaption(page)}} <i class="glyphicon" ng-if="shouldShowPageValidationIcon(page)" ng-class="{\n'+"\t\t\t\t\t\t'glyphicon-ok': getPageValidationState(page) === 'valid',\n\t\t\t\t\t\t'glyphicon-warning-sign': getPageValidationState(page) === 'warning',\n\t\t\t\t\t\t'glyphicon-remove': getPageValidationState(page) === 'error'\n\t\t\t\t\t}\"></i> </a><span ng-if=\"isCurrentPage(page)\">{{getPageCaption(page)}}</span></li></ol>"),$templateCache.put("templates/pagination/pagination-full.html",'<nav ng-if="paginationMode && paginationMode !== \'Questionnaire\'" class="text-center"><ul class="pagination"><!-- first --><li ng-class="{disabled: disableBtnPrevious()}"><a href ng-click="goToPage(pages[0])" class="cep-qa_questionnaire_full-pagination_first-page-link"><span><i class="glyphicon glyphicon-backward"></i></span></a></li><!-- previous --><li ng-class="{disabled: disableBtnPrevious()}"><a href ng-click="goBackwards()" class="cep-qa_questionnaire_full-pagination_previous-page-link"><span><i class="glyphicon glyphicon-triangle-left"></i></span></a></li><!-- pages --><li ng-repeat="page in pages" ng-class="{\n\t\t\t\t\tactive: isCurrentPage(page)\n\t\t\t\t}"><a href class="cep-qa_questionnaire_pagination_page-{{page.index + 1}}-link" ng-click="goToPage(page)" ng-attr-data-hint="{{getPageValidationAnnotation(page)}}" ng-class="{ \'hint--top hint--rounded\': getPageValidationAnnotation(page) }">{{page.index + 1}} <i class="glyphicon" ng-if="shouldShowPageValidationIcon(page)" ng-class="{\n\t\t\t\t\t\t\'glyphicon-ok\': getPageValidationState(page) === \'valid\',\n\t\t\t\t\t\t\'glyphicon-warning-sign\': getPageValidationState(page) === \'warning\',\n\t\t\t\t\t\t\'glyphicon-remove\': getPageValidationState(page) === \'error\'\n\t\t\t\t\t}"></i></a></li><!-- next --><li ng-class="{disabled: disableBtnNext()}"><a href ng-click="goForward()" class="cep-qa_questionnaire_full-pagination_next-page-link"><span><i class="glyphicon glyphicon-triangle-right"></i></span></a></li><!-- last --><li ng-class="{disabled: disableBtnNext()}"><a href class="cep-qa_questionnaire_full-pagination_last-page-link" ng-click="goToPage(pages[pages.length - 1])"><span><i class="glyphicon glyphicon-forward"></i></span></a></li></ul></nav>'),$templateCache.put("templates/pagination/pagination-prev-next.html",'<nav ng-if="paginationMode && paginationMode !== \'Questionnaire\'"><ul class="pager"><li class="previous" ng-class="{disabled: currentPage.index === 0}"><a href ng-click="goBackwards()" class="cep-qa_questionnaire_simple-pagination_previous-page-link"><i class="glyphicon glyphicon-chevron-left"></i> {{\'components.pagination.texts.previous\' | cepTranslate:language}}</a></li><li class="next" ng-class="{disabled: currentPage.index === pages.length - 1}"><a href ng-click="goForward()" class="cep-qa_questionnaire_simple-pagination_next-page-link">{{\'components.pagination.texts.next\' | cepTranslate:language}} <i class="glyphicon glyphicon-chevron-right"></i></a></li></ul></nav>'),$templateCache.put("templates/pdf-link.html",'<a class="icon-link cep-qa_questionnaire_download-pdf-btn" ng-href="{{pdfUrl}}" target="_blank"><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span> <span>{{ \'components.pdfLink.texts.policyDownload\' | cepTranslate:language }}</span> <span class="download-information">| <span>{{ \'components.pdfLink.texts.policyDownloadDetails\' | cepTranslate:language }}</span></span></a>'),$templateCache.put("templates/question_templates/input-label.html","<div class=\"question-label\" ng-class=\"{\n\t\t'no-index': !question.index,\n\t\t'reflexive': question.hasReflexive,\n\t\t'non-reflexive': !question.hasReflexive,\n\t\t'required': question.constraints.required,\n\t\t'optional': !question.constraints.required,\n\t\t'initialAnswerByProductChangeMarked': initialAnswerByProductChangeMarked()\n"+'\t}" ng-if="!hideLabel && ( question.caption || question.index || question.subText ) "><span class="question-index level-{{question.meta.cep.ui.level}} kb-text" ng-if="question.index">{{ question.index }} </span><label for="{{ getFormFieldId() }}" class="question-caption control-label kb-text" ng-if="question.caption">{{question.caption}}<cep-question-label-annotation question-constraints="question.constraints" question-type="question.type" language="language"></cep-question-label-annotation></label> <small class="question-subtext text-muted kb-text" ng-if="question.subText">{{ question.subText }}</small></div>'),$templateCache.put("templates/question_templates/question-af-accordeon.html",'<div class="panel-group question-group type-{{question.type}}" ng-form="{{ questionFormFieldId }}" data-question-id="{{question.id}}" cep-question-assessment-factor-group><div class="panel" ng-class="{\n\t\t\'panel-default\': getGroupState() === \'valid\',\n\t\t\'panel-warning\': getGroupState() === \'warning\',\n\t\t\'panel-danger\': getGroupState() === \'error\',\n\t}"><div class="panel-heading collapsible-assessment-factor-group-heading" ng-click="toggleState()"><h4 class="panel-title"><a href><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include><i class="glyphicon pull-right" ng-class="{\'glyphicon-chevron-down\': question.meta.cep.ui.expandedState, \'glyphicon-chevron-right\': !question.meta.cep.ui.expandedState}"></i></a></h4></div><div class="panel-collapse collapse" ng-class="{in: question.meta.cep.ui.expandedState}"><div class="panel-body"><div ng-repeat="subquestion in question.questions track by subquestion.id" class="subquestions"><cep-question-container application="application" question="subquestion" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" inside-table="insideTable" question-form="nestedForm" force-auto-submit="forceAutoSubmit"></cep-question-container></div><div class="text-right assessment-factor-group-controls"><button type="button" ng-if="isChildOfMultiSearch" class="btn" ng-class="{\'btn-link\': nestedForm.$invalid, \'btn-default\': nestedForm.$valid, }" ng-click="toggleState();activateParentQuestion();">{{ \'components.assessmentFactorGroups.texts.addAnotherSearchTerm\' | cepTranslate:language }}</button> <button type="button" class="btn btn-default focussable cep-qa_questionnaire_afg_remove_btn" ng-if="!questionnaireReadonly && showDeleteAssessmentFactorGroupButton === true" ng-class="{\'btn-link\': nestedForm.$invalid, \'btn-default\': nestedForm.$valid, }" ng-click="emitDeletionRequest();">{{ \'components.assessmentFactorGroups.texts.delete\' | cepTranslate:language }}</button> <button type="button" class="btn btn-default focussable" ng-class="{\'btn-link\': nestedForm.$invalid, \'btn-default\': nestedForm.$valid, }" ng-click="toggleState();activateNextQuestion();">{{ \'components.assessmentFactorGroups.texts.continue\' | cepTranslate:language }}</button></div></div></div></div></div>'),$templateCache.put("templates/question_templates/question-af-group.html",'<div class="panel panel-default question-group type-{{question.type}}" ng-form="{{ questionFormFieldId }}" ng-if="question.questions.length" cep-question-assessment-factor-group><div class="panel-heading"><h3 class="panel-title pull-left" ng-if="!hideQuestionTitleLabel"><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include></h3><button class="btn btn-danger pull-right cep-qa_questionnaire_afg_remove_btn" tabindex="-1" ng-click="emitDeletionRequest()" ng-if="!questionnaireReadonly && isChildOfMultiSearch && showDeleteAssessmentFactorGroupButton === true"><i class="glyphicon glyphicon-remove"></i></button><div class="clearfix"></div></div><div class="panel-body"><div ng-repeat="subquestion in question.questions track by subquestion.id" class="subquestions"><cep-question-container application="application" assessment-id="assessmentId" question="subquestion" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" parent="question" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" inside-table="insideTable" question-form="nestedForm" force-auto-submit="forceAutoSubmit"></cep-question-container></div></div></div>'),$templateCache.put("templates/question_templates/question-default.html",'<div class="type-{{ question.type }}" id="q_{{ question.id }}"><div class="form-group question-wrapper" ng-class="{\n'+"\t\t'has-error': questionIsInvalid() || hasServerMessage('error'),\n\t\t'has-warning': hasServerMessage('warning'),\n\t\t'has-info': hasServerMessage('info'),\n\t\t'large': renderHints.type === 'multi-line' ||\n\t\t\t\t (question.type === 'assessment-factor-search' && renderHints.type !== 'single-answer') ||\n\t\t\t\t question.precision === 'minute' ||\n\t\t\t\t question.precision === 'hour' ||\n\t\t\t\t question.availableUnits.length > 1\n\t\t}\"><div class=\"question-label-wrapper\"><div ng-include src=\"'templates/question_templates/input-label.html'\"></div></div><div class=\"question-annotation-wrapper\"><div ng-include src=\"'templates/question-annotations.html'\"></div></div><div class=\"question-content-wrapper\"><cep-form-field></cep-form-field></div><div class=\"question-validation-wrapper\"><div ng-include src=\"'templates/question-validations.html'\"></div></div></div></div>"),$templateCache.put("templates/question_templates/question-group.html",'<div class="question-group type-{{question.type}}" ng-if="question.questions.length && showGroupDuringPagination()"><cep-dynamic-headline level="{{question.meta.cep.ui.level}}" ng-if="!hideTitleDuringPagination()"><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include></cep-dynamic-headline><div ng-repeat="subquestion in question.questions track by subquestion.id" class="subquestions"><cep-question-container application="application" assessment-id="assessmentId" question="subquestion" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" parent="question" current-page-id="currentPageId" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" inside-table="insideTable" question-form="questionForm" force-auto-submit="forceAutoSubmit"></cep-question-container></div></div>'),$templateCache.put("templates/question_templates/question-label.html",'<div class="type-{{question.type}}" id="q_{{question.id}}"><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include></div>'),$templateCache.put("templates/question_templates/question-list.html",'<div id="q_{{question.id}}" cep-question-list ng-form="{{ questionFormFieldId }}" class="type-list"><div ng-include src="\'templates/question_templates/input-label.html\'"></div><div ng-include src="\'templates/question-annotations.html\'"></div><div ng-include src="\'templates/question-validations.html\'" ng-if="showParentValidations"></div><ul class="list-item-container list-unstyled"><li class="list-item" ng-repeat="listItemQuestion in question.answer track by listItemQuestion.meta.cep.ui.id"><div class="list-item-content type-{{listItemQuestion.type}}"><cep-question-container application="application" assessment-id="assessmentId" question="listItemQuestion" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" parent="question" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" inside-table="insideTable" question-form="nestedForm" force-auto-submit="forceAutoSubmit"></cep-question-container></div><div class="list-item-control"><button class="btn btn-danger focussable cep-qa_questionnaire_list_remove-row-btn_{{ questionFormFieldId }}" ng-click="removeRow($index)" type="button" ng-if="!questionnaireReadonly"><i class="glyphicon glyphicon-remove"></i></button></div></li></ul><div class="list-control" ng-if="!questionnaireReadonly"><button class="btn btn-default focussable cep-qa_questionnaire_list_add-row-btn_{{ questionFormFieldId }}" type="button" ng-click="addRow()">{{ \'components.list.texts.addRow\' | cepTranslate:language }}</button></div></div>'),$templateCache.put("templates/question_templates/question-plain.html",'<div class="type-{{ question.type }} plain-question" id="q_{{ question.id }}"><div class="form-group question-wrapper large"><div class="question-label-wrapper"><div ng-include src="\'templates/question_templates/input-label.html\'"></div></div><div class="question-annotation-wrapper"><div ng-include src="\'templates/question-annotations.html\'"></div></div><div class="question-content-wrapper" cep-plain-question><span class="plain-missing-answer" ng-if="!answerIsGiven">{{ \'components.plainText.noAnswer\' | cepTranslate:language }} </span><span ng-if="answerIsGiven"><ng-include src="\'templates/form_fields/plain-text.html\'"></span></div></div></div>'),$templateCache.put("templates/question_templates/question-struct.html",'<div cep-question-struct class="struct" id="q_{{ question.id }}" ng-form="{{ questionFormFieldId }}"><div ng-include src="\'templates/question_templates/input-label.html\'"></div><div ng-include src="\'templates/question-annotations.html\'"></div><div ng-include src="\'templates/question-validations.html\'" ng-if="showParentValidations"></div><ul class="struct-item-container list-unstyled"><li class="struct-item" ng-repeat="element in question.elements"><cep-question-container application="application" assessment-id="assessmentId" question="element" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" parent="question" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" inside-table="insideTable" question-form="nestedForm" force-auto-submit="forceAutoSubmit"></cep-question-container></li></ul></div>'),$templateCache.put("templates/question_templates/question-table.html",'<div class="question-table" id="q_{{question.id}}" cep-question-list ng-form="{{ questionFormFieldId }}" ng-class="{ \'has-nested-errors\': questionIsInvalid() }"><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include><ng-include src="\'templates/question-annotations.html\'"></ng-include><ng-include src="\'templates/question-validations.html\'"></ng-include><div class="question-table-row-wrapper question-table-header"><div class="question-table-row"><!-- row --><div class="question-table-cell" ng-style="{width: (100 / elements.length) + \'%\'}" ng-repeat="question in elements = question.answer[0].elements track by $index"><ng-include src="\'templates/question_templates/input-label.html\'"></ng-include></div></div><div class="question-table-row-control" ng-if="!questionnaireReadonly && rows.length > 1"><!-- row control --> <button class="btn btn-danger"><i class="glyphicon glyphicon-fire"></i></button></div></div><div class="question-table-content"><div class="question-table-row-wrapper" ng-repeat="question in rows = question.answer track by question.meta.cep.ui.id"><!-- row-wrapper --><div class="question-table-row"><!-- row --><div ng-style="{width: (100 / question.elements.length) + \'%\'}" class="question-table-cell" ng-repeat="element in question.elements track by $index"><cep-question-container application="application" assessment-id="assessmentId" question="element" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" pagination-mode="paginationMode" parent="question" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" question-form="nestedForm" inside-table="true" force-auto-submit="forceAutoSubmit"></cep-question-container></div></div><div class="question-table-row-control" ng-if="!questionnaireReadonly"><button class="btn btn-danger focussable cep-qa_questionnaire_table_remove-row-{{$index+1}}-btn_{{ generateRowFormId(question) }}" ng-click="removeRow($index)" type="button"><i class="glyphicon glyphicon-remove"></i></button></div></div></div><div class="question-table-control" ng-if="!questionnaireReadonly"><button class="btn btn-default focussable cep-qa_questionnaire_table_add-row-btn_{{ questionFormFieldId }}" ng-click="addRow()" type="button">{{ "components.list.texts.addRow" | cepTranslate:language }}</button></div></div>'),$templateCache.put("templates/question_templates/question-virtual.html","<!-- virtual question -->"),$templateCache.put("templates/question-annotations.html",'<div class="annotation hint kb-text help-block" ng-if="question.hint && !question.tags.ShowEvenIfNotAssignedTo"><p>{{ question.hint }}</p></div>'),$templateCache.put("templates/question-container.html","<div id=\"question-container-{{question.id}}\" class=\"\" ng-class=\"{\n\t \t'question-container': true,\n\t \t'level-{{question.meta.cep.ui.level}}': true,\n\t \t'type-{{question.type}}': true,\n\t\t'reflexive': question.hasReflexive,\n\t\t'non-reflexive': !question.hasReflexive,\n\t\t'required': question.constraints.required,\n\t\t'optional': !question.constraints.required,\n\t\t'readonly': questionnaireReadonly ,\n\t\t'new': question.isNew,\n\t\t'invalid': (questionIsInvalid() || question.answerState === 'invalid') && !questionIsUnanswered(),\n\t\t'unanswered': questionIsUnanswered(),\n"+'\t}"><div ng-if="renderHints.showQuestionBelowChildQuestions !== true"><cep-question-template></cep-question-template></div><div ng-repeat="subquestion in question.questions track by subquestion.id" ng-if="!questionIsGroup(question)" class="subquestions"><cep-question-container application="application" assessment-id="assessmentId" question="subquestion" question-form="questionForm" questionnaire-readonly="questionnaireReadonly" language="{{ language }}" pagination-mode="paginationMode" parent="question" inside-table="insideTable" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" show-delete-assessment-factor-group-button="renderHints.showDeleteAssessmentFactorGroupButton" hide-question-title-label="question.exposesNextUnusedFactor" force-auto-submit="forceAutoSubmit"></cep-question-container></div><div ng-if="renderHints.showQuestionBelowChildQuestions === true"><cep-question-template></cep-question-template></div></div>'),$templateCache.put("templates/question-label-annotation.html","<em ng-if=\"annotation === 'legend'\" class=\"question-caption-annotation legend-annotation\" title=\"{{ 'components.questionAnnotation.' + constraint | cepTranslate:language }}\">&nbsp; {{ 'components.questionAnnotation.annotationMarker' | cepTranslate:language }} </em><em ng-if=\"annotation === 'denote'\" class=\"question-caption-annotation denote-annotation\">&nbsp; &mdash; {{ 'components.questionAnnotation.' + constraint | cepTranslate:language }}</em>"),$templateCache.put("templates/question-reminder.html",'<div class="question-reminder popover bottom" ng-class="{in: (unansweredQuestionsAbove.length + invalidQuestionsAbove.length) > 0, minimized: minimized}"><div class="arrow hide-if-minimized"></div><span class="hide-if-maximized"><button type="button" class="btn btn-xs" ng-class="{\'btn-danger\': invalidQuestionsAbove.length > 0, \'btn-info\': invalidQuestionsAbove.length == 0}" ng-click="jumpToFirstUnansweredOrInvalidQuestion()"><i class="glyphicon glyphicon-arrow-up"></i> <span class="badge">{{unansweredQuestionsAbove.length + invalidQuestionsAbove.length}}</span></button></span><div class="popover-content hide-if-minimized"><p class="hide-if-minimized" ng-if="unansweredQuestionsAbove.length > 0 && invalidQuestionsAbove.length === 0">{{ \'components.questionReminder.unansweredQuestionsAbove\' | cepTranslate:{unansweredQuestionsAbove: unansweredQuestionsAbove.length}:$parent.$parent.language }}</p><p class="hide-if-minimized" ng-if="unansweredQuestionsAbove.length === 0 && invalidQuestionsAbove.length > 0">{{ \'components.questionReminder.invalidQuestionsAbove\' | cepTranslate:{invalidQuestionsAbove: invalidQuestionsAbove.length}:$parent.$parent.language }}</p><p class="hide-if-minimized" ng-if="unansweredQuestionsAbove.length > 0 && invalidQuestionsAbove.length > 0">{{ \'components.questionReminder.unansweredAndInvalidQuestionsAbove\' | cepTranslate:{unansweredQuestionsAbove: unansweredQuestionsAbove.length, invalidQuestionsAbove: invalidQuestionsAbove.length}:$parent.$parent.language }}</p><p class="with-button"><button type="button" class="btn btn-xs" ng-class="{\'btn-danger\': invalidQuestionsAbove.length > 0, \'btn-info\': invalidQuestionsAbove.length == 0}" ng-click="jumpToFirstUnansweredOrInvalidQuestion()"><i class="glyphicon glyphicon-arrow-up"></i> {{ \'components.questionReminder.focusFirstInvalidOrUnansweredQuestion\' | cepTranslate:language }}</button> <button type="button" class="btn btn-default btn-xs minimizer" ng-click="minimize($event)">{{ \'components.questionReminder.minimize\' | cepTranslate:language }}</button></p></div></div>'),$templateCache.put("templates/question-validations.html",'<!-- RAS VALIDATION MESSAGES --><div class="validations kb-text help-block" ng-if="question.messages.length"><p ng-repeat="message in question.messages" class="validation alert" ng-class="{\t\'alert-info\': message.type === \'info\',\n\t\t\t\t\t\'alert-warning\': message.type === \'warning\',\n\t\t\t\t\t\'alert-danger\': message.type === \'error\'}">{{ message.message }}</p></div><!-- LISTS and STRUCTS --><div class="validations help-block" ng-if="isParentForm && questionIsInvalid()"><div class="validation alert alert-danger parent-validation"><p>{{ \'components.\' + question.type + \'.errors.invalid\' | cepTranslate:language }}</p></div></div><!-- OTHER --><div class="validations kb-text help-block" ng-if="!isParentForm && questionIsInvalid() && !modelController.$error.invalidInputPart"><div class="validation alert alert-danger" ng-if="renderHints.type !== \'custom\'"><!-- GENERAL --><p ng-if="modelController.$error.required">{{ question.constraints.requiredViolationMessage || \'components.\' + question.type + \'.errors.required\' | cepTranslate:language }}</p><!-- DATE AND TIME --><div ng-if="question.type === \'date\'"><!-- date out of range --><p ng-if="modelController.$error.dateRange || modelController.$error.min">{{ question.constraints.minValueViolationMessage }}</p><p ng-if="modelController.$error.dateRange || modelController.$error.max">{{ question.constraints.maxValueViolationMessage }}</p><!-- date format validity --><!-- modelController.$error.number for invalid native year inputs --><p ng-if="modelController.$error.date || modelController.$error.parse || modelController.$error.number" cep-invalid-date></p><!-- missing  --><p ng-if="modelController.$error.dateMissing && !modelController.$error.date">{{ \'components.date.errors.dateMissing\' | cepTranslate:language }}</p><p ng-if="modelController.$error.time">{{ \'components.time.errors.time\' | cepTranslate:language }}</p></div><!-- NUMBER --><div ng-if="question.type === \'number\'"><!-- number out of range --><p ng-if="modelController.$error.max || modelController.$error.min" cep-number-out-of-range-validation-message min="question.constraints.minValue" max="question.constraints.maxValue" min-value-violation-message="question.constraints.minValueViolationMessage" max-value-violation-message="question.constraints.maxValueViolationMessage" error="modelController.$error" language="language" special-type="unitRenderHints[question.unit].type"></p><!-- number format validity --><p ng-if="modelController.$error.number || (question.type === \'number\' && modelController.$error.parse)">{{ \'components.number.errors.invalidNumber\' | cepTranslate:language }}</p><!-- number precision validity --><p ng-if="modelController.$error.numberPrecision && question.precision === 0">{{ \'components.number.errors.integer\' | cepTranslate:language }}</p><p ng-if="modelController.$error.numberPrecision && question.precision !== 0">{{ \'components.number.errors.precision\' | cepTranslate:{precision: question.precision}:language }}</p></div><!-- STRING --><p ng-if="modelController.$error.pattern">{{ question.constraints.patternViolationMessage || \'components.pattern.errors.doesNotMatch\' | cepTranslate:{pattern: question.constraints.pattern}:language }}</p></div><div class="validation alert alert-danger" ng-if="renderHints.type === \'custom\'"><p ng-if="modelController.$error.required">{{ question.constraints.requiredViolationMessage || \'components.\' + question.type + \'.errors.required\' | cepTranslate:language }}</p><p ng-if="key !== \'required\'" ng-repeat="(key, value) in modelController.$error">{{ \'components.\' + question.type + \'.errors.\' + key | cepTranslate:language }}</p></div></div>'),$templateCache.put("templates/questionnaire-core.html",'<section ng-repeat="question in application.questionnaire.questions track by question.id"><cep-question-container application="application" assessment-id="assessmentId" force-auto-submit="forceAutoSubmit" questionnaire-readonly="questionnaireReadonly " question="question" question-form="form" questionnaire-readonly="questionnaireReadonly " language="{{ language }}" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" ng-class="{\n\t\t\t\'invalid\': questionIsInvalid(),\n\t\t\t\'unanswered\': questionObj.$isEmpty(questionObj.$viewValue)\n\t\t}" pagination-mode="paginationMode" current-page-id="currentPageId" inside-table="false"></cep-question-container></section>'),$templateCache.put("templates/questionnaire-legend.html","<ul class=\"list-unstyled\"><li ng-if=\"config.required === 'legend'\"><span>{{ 'components.questionAnnotation.annotationMarker' | cepTranslate:language }}</span> &mdash; {{'components.questionAnnotation.required' | cepTranslate:language}}</li><li ng-if=\"config.optional === 'legend'\"><span>{{ 'components.questionAnnotation.annotationMarker' | cepTranslate:language }}</span> &mdash; {{'components.questionAnnotation.optional' | cepTranslate:language}}</li></ul>"),$templateCache.put("templates/questionnaire.html",'<div ng-form="questionForm" role="form" class="question-form" cep-questionnaire-blocker ng-class="{\'blocked\': showSpinner}" dir="{{ \'dir\' | cepTranslate:language }}"><cep-spinner show="showSpinner" show-delay-warning="takesTooLong"></cep-spinner><div ng-transclude="before"></div><cep-questionnaire-core ng-if="application" application="application" assessment-id="assessmentId" current-page-id="currentPageId" form="questionForm" language="{{ language }}" pagination-mode="paginationMode" questionnaire-readonly="questionnaireReadonly " show-validations="forceValidations" submit="::submit" schedule-autosubmit="::scheduleAutosubmit" process-autosubmit="::processAutosubmit" force-auto-submit="forceAutoSubmit"></cep-questionnaire-core><div ng-transclude="after"></div></div>'),$templateCache.put("templates/remove-optional-answer-btn.html",'<a href type="button" class="remove-optional-answer-btn small cep-qa_questionnaire_remove-optional-answer-btn_{{questionFormFieldId}}" ng-if="shouldShow()" ng-click="removeAnswer($event)">{{\'components.singleselection.reset\' | cepTranslate:language}}</a>'),$templateCache.put("templates/request-assistance-button.html",'<ng-transclude><button class="btn btn-default request-assistance-button cep-qa_questionnaire_request-assistance-btn" ng-click="requestAssistance()" ng-disabled="application.meta.cep.ui.requestedAssistance || requestInProgress">{{\'components.assistance.request\' | cepTranslate:language}}</button></ng-transclude>'),$templateCache.put("templates/spinner.html",'<!-- spinner --><div ng-if="show" class="loader" ng-class="{\n\t\t\'fullpage-backdrop\': spinnerConfig.backdrop === \'fullpage\',\n\t\t\'questionnaire-backdrop\': spinnerConfig.backdrop === \'questionnaire\'\n\t}"><div ng-if="spinnerConfig.spinner" class="spinner" ng-class="{\'delayed-warning\': showDelayWarning}"><div></div><div></div></div><div class="spinner-annotation" ng-if="showDelayWarning"><div class="alert alert-warning">{{ \'components.spinner.requestTakesLongerThanUsual\' | cepTranslate:language }}</div></div></div>'),$templateCache.put("templates/submit-button.html",'<div class="questionnaire-controls"><button class="btn btn-primary focussable questionnaire-submit cep-qa_questionnaire_submit-btn" type="button" ng-click="submitFunction()" ng-class="{valid: questionForm.$valid, invalid: questionForm.$invalid}" ng-disabled="shouldBeDisabled" ng-hide="shouldBeHidden">{{\'components.submitButton.texts.button\' | cepTranslate:language }}</button></div>'),$templateCache.put("templates/transfer-write-authority-btn.html",'<button class="btn btn-default transfer-write-authority-button cep-qa_questionnaire_transfer-write-authority-button" ng-click="cepTransferWriteAuthority()" ng-disabled="disabled">{{\'components.assistance.transfer\' | cepTranslate:language}}</button>'),$templateCache.put("templates/uib-custom-timepicker.html",'<div class="timepicker-inner"><input type="text" placeholder="{{$parent.hourPlaceholder}}" ng-model="hours" ng-change="updateHours()" class="form-control text-center" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementHours()" ng-blur="blur()"> <span class="uib-separator" ng-hide="$parent.fixedMinutes">:</span> <input ng-hide="$parent.fixedMinutes" type="text" placeholder="{{$parent.minutePlaceholder}}" ng-model="minutes" ng-change="updateMinutes()" class="form-control text-center minutes" ng-readonly="::readonlyInput" maxlength="2" tabindex="{{::tabindex}}" ng-disabled="noIncrementMinutes()" ng-blur="blur()"> <span ng-show="$parent.fixedMinutes" class="minutes pinned">{{$parent.fixedMinutesText}}</span> <button type="button" ng-show="showMeridian" ng-class="{disabled: noToggleMeridian()}" class="btn btn-default text-center meridian" ng-click="toggleMeridian()" ng-disabled="noToggleMeridian() || $parent.isDisabled" tabindex="{{::tabindex}}">{{meridian}}</button></div>')}]);
//# sourceMappingURL=reflex-cep-questionnaire.min.js.map